{"ast":null,"code":"import _classCallCheck from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/yash/WebDev/Quiz-Website/player-console/src/components/QuizConsole.jsx\";\nimport React, { Component } from \"react\";\nimport CircularProgressbar from \"react-circular-progressbar\";\nimport * as firebase from \"firebase\";\nimport BrandHeader from \"./brandHeader\";\nvar needDominantBaselineFix = true;\n\nvar QuizConsole =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizConsole, _Component);\n\n  function QuizConsole(props) {\n    var _this;\n\n    _classCallCheck(this, QuizConsole);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizConsole).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.props.firebaseRef.once(\"value\", function (snapshot) {\n        if (snapshot.exists()) {\n          var _liveQues = snapshot.val().liveQuestion;\n          console.log(_liveQues);\n\n          _this.setState({\n            liveQuestion: _liveQues\n          });\n        }\n      });\n    };\n\n    _this.updateLiveQuestion = function () {\n      _this.props.firebaseRef.on(\"value\", function (snapshot) {\n        if (snapshot.exists()) {\n          _this.setState({\n            liveQuestion: snapshot.val().liveQuestion\n          });\n        }\n      });\n    };\n\n    _this.updateQuestion = function () {\n      var firebaseQuestionFind = firebase.database().ref(\"question/q\".concat(liveQues));\n    };\n\n    _this.state = {\n      percentage: 20,\n      time: \"00:30\",\n      liveQuestion: 0\n    };\n    return _this;\n  }\n\n  _createClass(QuizConsole, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var teamName = this.props.teamName;\n      console.log(this.state.liveQuestion);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(BrandHeader, {\n        teamName: teamName,\n        participantName: this.props.participantName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"QuestionPage container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-centre justify-content-center row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"questionNumber tag\",\n        style: {\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Quesetion \", this.state.liveQuestion, \" of 10\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"Question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dolores optio sint repellendus quas, quos, omnis alias quidem, adipisicing elit. Dolores optio sint repellendus quas, quos, omnis alias quidem\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row text-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tag col-sm-5\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"qwertyuiop\"), React.createElement(\"div\", {\n        className: \"tag col-sm-5\",\n        id: \"b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"qwertyuiop\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row text-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tag col-sm-5\",\n        id: \"c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"qwertyuiop\"), React.createElement(\"div\", {\n        className: \"tag col-sm-5\",\n        id: \"d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"qwertyuiop\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"timer col-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(CircularProgressbar, {\n        className: \"timerCircle\",\n        percentage: this.state.percentage,\n        text: React.createElement(\"tspan\", {\n          dx: needDominantBaselineFix ? -25 : 0,\n          dy: needDominantBaselineFix ? +6 : 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, this.state.time),\n        background: \"true\",\n        backgroundPadding: 0,\n        strokeWidth: 5,\n        styles: {\n          // Customize the root svg element\n          root: {},\n          // Customize the path, i.e. the \"completed progress\"\n          path: {\n            // Path color\n            stroke: \"rgba(250, 0, 250, \".concat(this.state.percentage / 100, \")\"),\n            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n            strokeLinecap: \"butt\",\n            // Customize transition animation\n            transition: \"stroke-dashoffset 0.5s ease 0s\"\n          },\n          // Customize the circle behind the path, i.e. the \"total progress\"\n          trail: {\n            // Trail color\n            stroke: \"#d6d6d6\"\n          },\n          // Customize the text\n          text: {\n            // Text color\n            fill: \"#34c\",\n            // Text size\n            fontSize: \"20px\"\n          },\n          // Customize background - only used when the `background` prop is true\n          background: {\n            fill: \"white\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"continue tag col-sm-2 text-center\",\n        style: {\n          borderRadius: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Continue\"))));\n    }\n  }]);\n\n  return QuizConsole;\n}(Component);\n\nexport default QuizConsole;","map":{"version":3,"sources":["/home/yash/WebDev/Quiz-Website/player-console/src/components/QuizConsole.jsx"],"names":["React","Component","CircularProgressbar","firebase","BrandHeader","needDominantBaselineFix","QuizConsole","props","componentDidMount","firebaseRef","once","snapshot","exists","liveQues","val","liveQuestion","console","log","setState","updateLiveQuestion","on","updateQuestion","firebaseQuestionFind","database","ref","state","percentage","time","teamName","participantName","justifyContent","root","path","stroke","strokeLinecap","transition","trail","text","fill","fontSize","background","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CircularProgressbar from \"react-circular-progressbar\";\nimport * as firebase from \"firebase\";\nimport BrandHeader from \"./brandHeader\";\n\nconst needDominantBaselineFix = true;\n\nclass QuizConsole extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      percentage: 20,\n      time: \"00:30\",\n      liveQuestion: 0\n    };\n  }\n\n  componentDidMount = () => {\n    this.props.firebaseRef.once(\"value\", snapshot => {\n      if (snapshot.exists()) {\n        let liveQues = snapshot.val().liveQuestion;\n        console.log(liveQues);\n        this.setState({ liveQuestion: liveQues });\n      }\n    });\n  };\n\n  updateLiveQuestion=()=>{\n  this.props.firebaseRef.on(\"value\", (snapshot) => {\n    if (snapshot.exists()) {\n      this.setState({liveQuestion: snapshot.val().liveQuestion})\n    }\n  });\n}\n\nupdateQuestion=()=>{\n  let firebaseQuestionFind = firebase.database().ref(`question/q${liveQues}`);\n\n}\n\n  componentDidUpdate() {}\n\n  render() {\n    var teamName = this.props.teamName;\n    console.log(this.state.liveQuestion)\n\n    return (\n      <div>\n        <BrandHeader\n          teamName={teamName}\n          participantName={this.props.participantName}\n        />\n        <div className=\"QuestionPage container\">\n          <div className=\"text-centre justify-content-center row\">\n            <p\n              className=\"questionNumber tag\"\n              style={{ justifyContent: \"center\" }}\n            >\n              Quesetion {this.state.liveQuestion} of 10\n            </p>\n          </div>\n          <br />\n          <p className=\"Question\">\n            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dolores\n            optio sint repellendus quas, quos, omnis alias quidem, adipisicing\n            elit. Dolores optio sint repellendus quas, quos, omnis alias quidem\n          </p>\n          <br />\n          <div id=\"options\">\n            <div className=\"row text-center justify-content-center\">\n              <div className=\"tag col-sm-5\" id=\"a\">\n                qwertyuiop\n              </div>\n              <div className=\"tag col-sm-5\" id=\"b\">\n                qwertyuiop\n              </div>\n            </div>\n            <br />\n            <div className=\"row text-center justify-content-center\">\n              <div className=\"tag col-sm-5\" id=\"c\">\n                qwertyuiop\n              </div>\n              <div className=\"tag col-sm-5\" id=\"d\">\n                qwertyuiop\n              </div>\n            </div>\n          </div>\n          <br />\n          <div className=\"row\">\n            <div className=\"col-sm-5\" />\n            <div className=\"timer col-sm-4\">\n              <CircularProgressbar\n                className=\"timerCircle\"\n                percentage={this.state.percentage}\n                text={\n                  <tspan\n                    dx={needDominantBaselineFix ? -25 : 0}\n                    dy={needDominantBaselineFix ? +6 : 0}\n                  >\n                    {this.state.time}\n                  </tspan>\n                }\n                background=\"true\"\n                backgroundPadding={0}\n                strokeWidth={5}\n                styles={{\n                  // Customize the root svg element\n                  root: {},\n                  // Customize the path, i.e. the \"completed progress\"\n                  path: {\n                    // Path color\n                    stroke: `rgba(250, 0, 250, ${this.state.percentage / 100})`,\n                    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                    strokeLinecap: \"butt\",\n                    // Customize transition animation\n                    transition: \"stroke-dashoffset 0.5s ease 0s\"\n                  },\n                  // Customize the circle behind the path, i.e. the \"total progress\"\n                  trail: {\n                    // Trail color\n                    stroke: \"#d6d6d6\"\n                  },\n                  // Customize the text\n                  text: {\n                    // Text color\n                    fill: \"#34c\",\n                    // Text size\n                    fontSize: \"20px\"\n                  },\n                  // Customize background - only used when the `background` prop is true\n                  background: {\n                    fill: \"white\"\n                  }\n                }}\n              />\n            </div>\n\n            <div\n              className=\"continue tag col-sm-2 text-center\"\n              style={{ borderRadius: 25 }}\n            >\n              Continue\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuizConsole;\n"]},"metadata":{},"sourceType":"module"}