{"map":"{\"version\":3,\"sources\":[\"/home/yash/WebDev/Quiz-Website/player-console/src/components/brandHeader.jsx\",\"/home/yash/WebDev/Quiz-Website/player-console/src/components/QuizConsole.jsx\",\"/home/yash/WebDev/Quiz-Website/player-console/src/App.js\",\"/home/yash/WebDev/Quiz-Website/player-console/src/serviceWorker.js\",\"/home/yash/WebDev/Quiz-Website/player-console/src/index.js\",\"/home/yash/WebDev/Quiz-Website/player-console/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/home/yash/WebDev/Quiz-Website/player-console/src/image/hackgridLogo.png\",\"/home/yash/WebDev/Quiz-Website/player-console/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/home/yash/WebDev/Quiz-Website/player-console/src/image/Logo.png\",\"/home/yash/WebDev/Quiz-Website/player-console/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/home/yash/WebDev/Quiz-Website/player-console/src/image/quiz.png\"],\"names\":[\"BrandHeader\",\"state\",\"react_default\",\"a\",\"createElement\",\"className\",\"id\",\"src\",\"Logo\",\"alt\",\"this\",\"props\",\"teamName\",\"style\",\"fontSize\",\"Head\",\"Component\",\"QuizConsole\",\"_this\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"componentDidMount\",\"liveQuestionSetter\",\"setState\",\"loading\",\"firebaseRef\",\"on\",\"snapshot\",\"exists\",\"liveQuestion\",\"val\",\"currentQuestion\",\"firebase\",\"ref\",\"concat\",\"once\",\"counter\",\"globalCounter\",\"afterAns\",\"database\",\"child\",\"set\",\"time\",\"perc\",\"mytimer\",\"setInterval\",\"killTimer\",\"timer\",\"percentage\",\"clearInterval\",\"console\",\"log\",\"question\",\"correctAnswer\",\"optiona\",\"optionb\",\"optionc\",\"optiond\",\"answer\",\"score\",\"killtime\",\"liveQues\",\"option\",\"optionACounter\",\"optionBCounter\",\"optionCCounter\",\"optionDCounter\",\"firebaseQuestionFind2\",\"swi\",\"questionToBeDisplayed\",\"answerToBeDisplayed\",\"optionA\",\"optionB\",\"optionC\",\"optionD\",\"q\",\"event\",\"_this2\",\"target\",\"userCounterCheck\",\"actualAns\",\"optionUpdate\",\"startTimeStamp\",\"timeStamp\",\"currentTime\",\"Date\",\"getTime\",\"timeElapsed\",\"Math\",\"round\",\"newScore\",\"_this3\",\"dist_default\",\"text\",\"dx\",\"dy\",\"background\",\"backgroundPadding\",\"strokeWidth\",\"styles\",\"root\",\"path\",\"stroke\",\"strokeLinecap\",\"transition\",\"trail\",\"fill\",\"wait\",\"onClick\",\"check\",\"bind\",\"brandHeader\",\"participantName\",\"justifyContent\",\"renderQuestion\",\"renderTimer\",\"apiKey\",\"authDomain\",\"databaseURL\",\"projectId\",\"storageBucket\",\"messagingSenderId\",\"firebaseUser\",\"firebaseQuestions\",\"App\",\"onPressRegisterButton\",\"preventDefault\",\"document\",\"getElementById\",\"value\",\"password\",\"registered\",\"finPass\",\"pass\",\"loggedIn\",\"loadingSignUp\",\"components_QuizConsole\",\"user\",\"questions\",\"onSubmit\",\"autoComplete\",\"register\",\"userCheck\",\"keys\",\"includes\",\"type\",\"name\",\"placeholder\",\"onChange\",\"passwordOnChange\",\"required\",\"color\",\"react_loader_spinner_default\",\"height\",\"width\",\"teamNameOnChange\",\"loginOrRegister\",\"renderRegisterOrQuiz\",\"spinner\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport Logo from '../image/Logo.png';\\nimport Head from '../image/hackgridLogo.png'\\n \\n\\nclass BrandHeader extends Component {\\n    state = {  }\\n    render() { \\n        return ( \\n            <div className=\\\"brand\\\">\\n            <div className=\\\"navBar\\\">\\n              <img id=\\\"Logo\\\" src={Logo} alt=\\\"logo\\\" className=\\\"navLogo\\\"/>\\n              <div id=\\\"playerDetail\\\" className=\\\"navs\\\">\\n                <p id=\\\"teamName\\\">Team Name:  {this.props.teamName}</p>\\n              </div>\\n            </div>\\n            <div className=\\\"headerText\\\">\\n              <p style={{fontSize: 20}}>Hello! welcome to</p>\\n              <img src={Head} alt=\\\"HackGrid\\\" id=\\\"headLogo\\\"/>\\n              <p style={{fontSize: 17}}>By Apple Developers Group</p>\\n            </div>\\n          </div>\\n         );\\n    }\\n}\\n\\nexport default BrandHeader;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport CircularProgressbar from \\\"react-circular-progressbar\\\";\\nimport * as firebase from \\\"firebase\\\";\\nimport BrandHeader from \\\"./brandHeader\\\";\\nimport wait from '../image/quiz.png'\\n\\nconst needDominantBaselineFix = true;\\n\\nlet timer=15;\\n\\nlet percentage=0;\\n\\nclass QuizConsole extends Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      percentage: 0,\\n      timer: \\\"15\\\",\\n      liveQuestion: 0,\\n      question: \\\"\\\",\\n      correctAnswer: \\\"\\\",\\n      optiona: \\\"\\\",\\n      optionb: \\\"\\\",\\n      optionc: \\\"\\\",\\n      optiond: \\\"\\\",\\n      answer: \\\"\\\",\\n      counter: 1,\\n      score: 0,\\n      loading: false,\\n      killtime: false,\\n      afterAns : 'false'\\n    };\\n  }\\n\\n  componentDidMount = () => {\\n    this.liveQuestionSetter();\\n\\n    \\n    \\n    //Detecting change in liveQuestion variable in real time database\\n    this.setState({loading: true})\\n    this.props.firebaseRef.on(\\\"value\\\", (snapshot) =>{\\n     \\n      if (snapshot.exists()) {\\n\\n        this.setState({liveQuestion: snapshot.val().liveQuestion})\\n      \\n\\n        this.currentQuestion();\\n\\n        //This is for enabling quiz page when new question arrives\\n        \\n        let firebaseUserInfo = firebase.database().ref(`players/${this.props.teamName}`);\\n        firebaseUserInfo.once(\\\"value\\\", (snapshot)=> {\\n         this.setState({ counter : 0})\\n        });\\n\\n        \\n\\n        if (snapshot.val().globalCounter === 1 && this.state.counter === 2) {\\n         this.setState({afterAns: false})\\n          let firebaseResetCounter = this.props.database.ref(`players/${this.props.teamName}`);\\n          firebaseResetCounter.child(\\\"counter\\\").set(0);\\n        }\\n\\n        if(this.state.counter===0)\\n        {\\n          var time=15;\\n          var perc=0;\\n  \\n  \\n  var mytimer = setInterval(()=>{\\n    time=time-1;\\n    perc+=6.66666666666666666;\\n    if(perc>99){\\n    killTimer();\\n    }\\n\\n    if(time<10)\\n    time = '0'+time;\\n    this.setState({timer: time,\\n      percentage: perc})\\n    // timer= time;\\n  }, 1000);\\n\\n  if(this.state.timer>15)\\n  killTimer();\\n\\nvar killTimer=()=>{\\n  clearInterval(mytimer)\\n}\\n        }\\n\\n        this.setState({loading: false,})\\n          \\n      }\\n    });\\n    let firebaseUserInfo = this.props.database.ref(`players/${this.props.teamName}`);\\n          firebaseUserInfo.once('value', (snapshot)=> {\\n              let userCounterCheck = snapshot.val().counter;\\n              if(userCounterCheck===2){\\n              this.setState({afterAns: true,\\n              counter: 2})\\n              console.log(this.state.counter)}\\n          })\\n  };\\n   \\n\\n\\n//function to increase option selected count\\noptionUpdate(liveQues, option) {\\n  let firebaseQuestionFind2 = this.props.database.ref(`question/q${liveQues}`);\\n\\n  let optionACounter;\\n  let optionBCounter;\\n  let optionCCounter;\\n  let optionDCounter;\\n  firebaseQuestionFind2.once('value', (snapshot)=> {\\n      optionACounter = snapshot.val().optionACounter;\\n      optionBCounter = snapshot.val().optionBCounter;\\n      optionCCounter = snapshot.val().optionCCounter;\\n      optionDCounter = snapshot.val().optionDCounter;\\n  })\\n\\n  if (option === 'a') {\\n      optionACounter = optionACounter + 1;\\n      firebaseQuestionFind2.child('optionACounter').set(optionACounter);\\n  }\\n\\n  if (option === 'b') {\\n      optionBCounter = optionBCounter + 1;\\n      firebaseQuestionFind2.child('optionBCounter').set(optionBCounter);\\n  }\\n\\n  if (option === 'c') {\\n      optionCCounter = optionCCounter + 1;\\n      firebaseQuestionFind2.child('optionCCounter').set(optionCCounter);\\n  }\\n\\n  if (option === 'd') {\\n      optionDCounter = optionDCounter + 1;\\n      firebaseQuestionFind2.child('optionDCounter').set(optionDCounter);\\n  }\\n}\\n\\n\\n\\n\\nhitTimer(swi){\\n  \\n \\n};\\n\\n//function to find the question string for the live question\\n currentQuestion() {\\n\\n  let firebaseQuestionFind = this.props.database.ref(`question/q${this.state.liveQuestion}`);\\n\\n  let questionToBeDisplayed;\\n  let answerToBeDisplayed;\\n  let optionA,optionB,optionC,optionD;\\n  firebaseQuestionFind.once('value', (snapshot) =>{\\n      questionToBeDisplayed = snapshot.val().q;\\n      answerToBeDisplayed = snapshot.val().a;\\n      optionA = snapshot.val().optionA;\\n      optionB = snapshot.val().optionB;\\n      optionC = snapshot.val().optionC;\\n      optionD = snapshot.val().optionD;\\n      \\n  });\\n\\n  this.setState({\\n    question: questionToBeDisplayed,\\n    correctAnswer: answerToBeDisplayed,\\n    optiona: optionA,\\n    optionb: optionB,\\n    optionc: optionC,\\n    optiond: optionD,\\n\\n  })\\n}\\n\\n   check(event) {\\n\\n    let option=event.target.id;\\n    this.setState({\\n      answer: option,\\n    })\\n      //correcting the user's option\\n      this.props.firebaseRef.once('value', (snapshot) =>{\\n          let actualAns = this.state.correctAnswer;\\n          this.setState({\\n            liveQuestion: snapshot.val().liveQuestion\\n          })\\n          let score;\\n          let userCounterCheck;\\n          let firebaseUserInfo = this.props.database.ref(`players/${this.props.teamName}`);\\n          firebaseUserInfo.once('value', (snapshot)=> {\\n              score = snapshot.val().score;\\n              userCounterCheck = snapshot.val().counter;\\n          })\\n  \\n          if (userCounterCheck !== 2) {\\n              this.props.firebaseRef.once('value', (snapshot)=> {\\n                  this.setState({liveQuestion: snapshot.val().liveQuestion})\\n                  this.optionUpdate(this.state.liveQuestion, option);\\n              })\\n\\n              \\n          }\\n          \\n  \\n          if (actualAns === option && userCounterCheck !== 2) {\\n              \\n              let startTimeStamp = snapshot.val().timeStamp;\\n              let currentTime = new Date().getTime();\\n              let timeElapsed =  Math.round((currentTime-startTimeStamp)/1000);\\n              let newScore = score + (50-timeElapsed);\\n              let firebaseChangeScore = firebase.database().ref(`players/${this.props.teamName}`);\\n              firebaseChangeScore.child(\\\"score\\\").set(newScore);\\n          }\\n  \\n          \\n          let firebaseChangeCounter2 = firebase.database().ref(`players/${this.props.teamName}`);\\n          firebaseChangeCounter2.child('counter').set(2);\\n          this.setState({counter: 2});\\n      })\\n  }\\n\\n  //Onload function to display current live question\\n   liveQuestionSetter() {\\n    this.props.firebaseRef.once(\\\"value\\\", (snapshot)=> {\\n      let liveQues = snapshot.val().liveQuestion;\\n      this.setState({ liveQuestion: liveQues});\\n      this.currentQuestion();\\n    });\\n  }\\n  renderTimer(){\\n    if(this.state.counter!==2)\\n    return(\\n    <CircularProgressbar\\n                className=\\\"timerCircle\\\"\\n                percentage={this.state.percentage}\\n                text={\\n                  <tspan\\n                    dx={needDominantBaselineFix ? -25 : 0}\\n                    dy={needDominantBaselineFix ? +6 : 0}>\\n                     00:{this.state.timer}\\n                   </tspan>\\n                }\\n                background=\\\"true\\\"\\n                backgroundPadding={0}\\n                strokeWidth={5}\\n                styles={{\\n                  // Customize the root svg element\\n                  root: {},\\n                  // Customize the path, i.e. the \\\"completed progress\\\"\\n                  path: {\\n                    // Path color\\n                    stroke: `rgba(250, 0, 250, ${100 / 100})`,\\n                    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\\n                    strokeLinecap: \\\"butt\\\",\\n                    // Customize transition animation\\n                    transition: \\\"stroke-dashoffset 0.5s ease 0s\\\"\\n                  },\\n                  // Customize the circle behind the path, i.e. the \\\"total progress\\\"\\n                  trail: {\\n                    // Trail color\\n                    stroke: \\\"#d6d6d6\\\"\\n                  },\\n                  // Customize the text\\n                  text: {\\n                    // Text color\\n                    fill: \\\"#34c\\\",\\n                    // Text size\\n                    fontSize: \\\"20px\\\"\\n                  },\\n                  // Customize background - only used when the `background` prop is true\\n                  background: {\\n                    fill: \\\"white\\\"\\n                  }\\n                }}\\n              />)\\n\\n             return(<div></div>) \\n  }\\n  renderQuestion(){\\n    if(this.state.counter===2)\\n    return(\\n      <div><img id=\\\"waitImg\\\"\\n        src={wait} alt=\\\"....\\\"/></div>\\n    )\\n    \\n    return(\\n      <div>\\n      <p className=\\\"Question\\\">\\n            {this.state.question}\\n          </p>\\n          <br />\\n          <div id=\\\"options\\\" className=\\\"Options text-center\\\">\\n          <div className=\\\"row container optionGrp justify-content-center \\\">\\n          <div id=\\\"a\\\" className=\\\"tag col-lg-5 text-center\\\" onClick={this.check.bind(this)}>{this.state.optiona}</div>\\n        <div id=\\\"b\\\" className=\\\"tag col-lg-5 text-center\\\" onClick={this.check.bind(this)}>{this.state.optionb}</div>\\n          </div>\\n<br/>\\n        <div className=\\\"row container optionGrp justify-content-center\\\" id=\\\"options\\\">\\n          <div id=\\\"c\\\" className=\\\"tag col-lg-5\\\" onClick={this.check.bind(this)}>{this.state.optionc}</div>\\n        <div id=\\\"d\\\" className=\\\"tag col-lg-5\\\" onClick={this.check.bind(this)}>{this.state.optiond}</div>\\n          </div>\\n          \\n          </div>\\n          </div>\\n    )\\n  }\\n\\n \\n\\n  render() {\\n    return (\\n      <div>\\n        <BrandHeader\\n          teamName={this.props.teamName}\\n          participantName={this.props.participantName}\\n        />\\n        <div className=\\\"QuestionPage container\\\">\\n          <div className=\\\"text-centre justify-content-center row\\\">\\n            <p\\n              className=\\\"questionNumber tag\\\"\\n              style={{ justifyContent: \\\"center\\\" }}\\n            >\\n              Question {this.state.liveQuestion} of 10\\n            </p>\\n          </div>\\n          <br />\\n          {this.renderQuestion()}\\n          <br />\\n          <div className=\\\"row\\\">\\n            <div className=\\\"col-sm-5\\\" />\\n            <div className=\\\"timer col-sm-4\\\">\\n              {this.renderTimer()}\\n            </div>\\n\\n            \\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default QuizConsole;\\n\",\"import React, { Component } from 'react';\\nimport * as firebase from 'firebase';\\nimport Loader from 'react-loader-spinner'\\nimport QuizConsole from './components/QuizConsole';\\nimport Logo from './image/hackgridLogo.png';\\nimport './App.css';\\n\\n\\nvar config = {\\n  apiKey: \\\"AIzaSyBPLVDzn-VHltDnx-dL1e_M_cPIQQqr8P4\\\",\\n  authDomain: \\\"adgquiz.firebaseapp.com\\\",\\n  databaseURL: \\\"https://adgquiz.firebaseio.com\\\",\\n  projectId: \\\"adgquiz\\\",\\n  storageBucket: \\\"adgquiz.appspot.com\\\",\\n  messagingSenderId: \\\"838063692472\\\"\\n};\\nfirebase.initializeApp(config);\\n\\nconst firebaseUser = firebase.database().ref(`players`);\\nconst firebaseRef = firebase.database().ref();\\nconst database = firebase.database();\\nconst firebaseQuestions = firebase.database().ref(`question`);\\n\\n\\n\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props);\\n\\n    \\n\\n    this.state = { \\n      loadingSignUp: false,\\n      registered: false,\\n      loggedIn: false,\\n      teamName: '',\\n      password: '',\\n      participantName: ''\\n     }\\n  }\\n\\n\\n\\n\\n  renderRegisterOrQuiz(){\\n    if(this.state.loggedIn)\\n    return(\\n      <div> <QuizConsole teamName={this.state.teamName} participantName={this.state.participantName} database={database} user={firebaseUser} firebaseRef={firebaseRef} questions={firebaseQuestions}/></div>\\n     \\n    )\\n\\n    return(\\n      <form  id=\\\"regDeco\\\" className =\\\"register\\\" onSubmit={this.onPressRegisterButton.bind(this)} autoComplete=\\\"off\\\">\\n      <div className=\\\"text-center\\\">\\n        <img src={Logo} alt=\\\"logo\\\" id=\\\"reglogo\\\"></img>\\n        <h1>Quiz</h1>\\n      </div>\\n          {this.register()}\\n      </form>\\n    )\\n  }\\n\\n  teamNameOnChange(event){\\n    this.setState({ teamName: event.target.value,\\n                    loadingSignUp: true});\\n    firebaseUser.once('value', (snapshot)=> {\\n      let players = Object.keys(snapshot.val());\\n        let userCheck = players.includes(this.state.teamName);\\n        this.setState({loadingSignUp: false})\\n       if (userCheck)\\n       this.setState({registered: true})\\n       else\\n       this.setState({registered: false})\\n    })\\n    \\n  }\\n\\n  participantNameOnChange(event){\\n    this.setState({participantName: event.target.value});\\n  }\\n\\n  passwordOnChange(event){\\n  \\n    this.setState({ password: document.getElementById(\\\"password\\\").value});\\n    \\n\\n  }\\n\\n  onPressRegisterButton=(event)=>{\\n    event.preventDefault();\\n    this.setState({\\n      teamName: document.getElementById(\\\"TeamName\\\").value,\\n      password: document.getElementById(\\\"password\\\").value,\\n    })\\n    if(this.state.registered===false)\\n    {\\n      firebaseUser.child(this.state.teamName).set({\\n        password: this.state.password,\\n        score: 0,\\n        counter: 0,\\n      });\\n      this.setState({registered: true})\\n    }\\n    else{\\n      let finPass = this.state.password;\\n      let pass='';\\n      let firebasePassCheck = firebase.database().ref(`players/${this.state.teamName}`);\\n    firebasePassCheck.once('value', (snapshot)=> {\\n      pass= snapshot.val().password;\\n\\n      if(finPass===pass)\\n      {\\n        this.setState({\\n          loggedIn: true,\\n        })\\n      }\\n    });\\n    \\n    }\\n  }\\n\\n  loginOrRegister(){\\n    \\n    if(this.state.registered===false)\\n    return(\\n      <div>\\n      <input type=\\\"password\\\" id=\\\"password\\\" className=\\\"\\\" name=\\\"login\\\" placeholder=\\\"Password\\\" value={this.state.password} onChange={this.passwordOnChange.bind(this)} required/>      \\n      <br/>\\n      <input className=\\\"btn btn-primary\\\" id=\\\"rButton\\\" type=\\\"submit\\\" value=\\\"Register\\\"/>\\n      </div>\\n    )\\n\\n    return(\\n      <div>\\n      <input type=\\\"password\\\" id=\\\"password\\\" className=\\\"\\\" name=\\\"login\\\" placeholder=\\\"Password\\\" value={this.state.password} onChange={this.passwordOnChange.bind(this)} required/>\\n      <p style={{color: 'blue'}}>Registered</p>      \\n      <br/>\\n      <input className=\\\"btn btn-primary\\\" id=\\\"rButton\\\" type=\\\"submit\\\" value=\\\"Log In\\\"/>\\n      </div>\\n    )\\n  }\\n\\n  spinner(){\\n    if(this.state.loadingSignUp)\\n    return(\\n      <Loader\\n         type=\\\"TailSpin\\\"\\n         color=\\\"#00BFFF\\\"\\n         height=\\\"55\\\"\\t\\n         width=\\\"55\\\"\\n      /> \\n    )\\n  }\\n\\n  register(){\\n    return(\\n      <div className=\\\"registerCard container\\\">\\n      <input type=\\\"text\\\" id=\\\"TeamName\\\" className=\\\"\\\" name=\\\"login\\\" placeholder=\\\"Team Name\\\" value={this.state.teamName + ''} autoComplete=\\\"off\\\" onChange={this.teamNameOnChange.bind(this)} required/>\\n      {this.loginOrRegister()}\\n      </div>\\n    )\\n  }\\n\\n  render() { \\n    return ( \\n      <div className=\\\"App \\\" >\\n      {this.renderRegisterOrQuiz()}\\n<br/>\\n<br/>\\n<br/>\\n<div id=\\\"loader\\\" className=\\\"text-center\\\">{this.spinner()}</div>\\n      </div>\\n     );\\n  }\\n}\\n \\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport 'bootstrap/dist/css/bootstrap.css';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/hackgridLogo.a80bfdd5.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/Logo.182b63bb.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/quiz.eca3a5d8.png\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{147:function(e,t,a){},149:function(e,t,a){\"use strict\";a.r(t);var n=a(0),i=a.n(n),s=a(58),r=a.n(s),o=(a(68),a(15)),c=a(16),l=a(18),u=a(17),m=a(19),p=a(3),d=a(59),v=a.n(d),h=a(60),g=a.n(h),f=a(61),b=a.n(f),E=a(30),N=a.n(E),y=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,i=new Array(n),s=0;s<n;s++)i[s]=arguments[s];return(a=Object(l.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(i)))).state={},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return i.a.createElement(\"div\",{className:\"brand\"},i.a.createElement(\"div\",{className:\"navBar\"},i.a.createElement(\"img\",{id:\"Logo\",src:b.a,alt:\"logo\",className:\"navLogo\"}),i.a.createElement(\"div\",{id:\"playerDetail\",className:\"navs\"},i.a.createElement(\"p\",{id:\"teamName\"},\"Team Name:  \",this.props.teamName))),i.a.createElement(\"div\",{className:\"headerText\"},i.a.createElement(\"p\",{style:{fontSize:20}},\"Hello! welcome to\"),i.a.createElement(\"img\",{src:N.a,alt:\"HackGrid\",id:\"headLogo\"}),i.a.createElement(\"p\",{style:{fontSize:17}},\"By Apple Developers Group\")))}}]),t}(n.Component),w=a(62),k=a.n(w),S=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(l.a)(this,Object(u.a)(t).call(this,e))).componentDidMount=function(){a.liveQuestionSetter(),a.setState({loading:!0}),a.props.firebaseRef.on(\"value\",function(e){if(e.exists()){if(a.setState({liveQuestion:e.val().liveQuestion}),a.currentQuestion(),p.database().ref(\"players/\".concat(a.props.teamName)).once(\"value\",function(e){a.setState({counter:0})}),1===e.val().globalCounter&&2===a.state.counter)a.setState({afterAns:!1}),a.props.database.ref(\"players/\".concat(a.props.teamName)).child(\"counter\").set(0);if(0===a.state.counter){var t=15,n=0,i=setInterval(function(){t-=1,(n+=6.666666666666667)>99&&s(),t<10&&(t=\"0\"+t),a.setState({timer:t,percentage:n})},1e3);a.state.timer>15&&s();var s=function(){clearInterval(i)}}a.setState({loading:!1})}}),a.props.database.ref(\"players/\".concat(a.props.teamName)).once(\"value\",function(e){2===e.val().counter&&(a.setState({afterAns:!0,counter:2}),console.log(a.state.counter))})},a.state={percentage:0,timer:\"15\",liveQuestion:0,question:\"\",correctAnswer:\"\",optiona:\"\",optionb:\"\",optionc:\"\",optiond:\"\",answer:\"\",counter:1,score:0,loading:!1,killtime:!1,afterAns:\"false\"},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"optionUpdate\",value:function(e,t){var a,n,i,s,r=this.props.database.ref(\"question/q\".concat(e));r.once(\"value\",function(e){a=e.val().optionACounter,n=e.val().optionBCounter,i=e.val().optionCCounter,s=e.val().optionDCounter}),\"a\"===t&&(a+=1,r.child(\"optionACounter\").set(a)),\"b\"===t&&(n+=1,r.child(\"optionBCounter\").set(n)),\"c\"===t&&(i+=1,r.child(\"optionCCounter\").set(i)),\"d\"===t&&(s+=1,r.child(\"optionDCounter\").set(s))}},{key:\"hitTimer\",value:function(e){}},{key:\"currentQuestion\",value:function(){var e,t,a,n,i,s;this.props.database.ref(\"question/q\".concat(this.state.liveQuestion)).once(\"value\",function(r){e=r.val().q,t=r.val().a,a=r.val().optionA,n=r.val().optionB,i=r.val().optionC,s=r.val().optionD}),this.setState({question:e,correctAnswer:t,optiona:a,optionb:n,optionc:i,optiond:s})}},{key:\"check\",value:function(e){var t=this,a=e.target.id;this.setState({answer:a}),this.props.firebaseRef.once(\"value\",function(e){var n,i,s=t.state.correctAnswer;if(t.setState({liveQuestion:e.val().liveQuestion}),t.props.database.ref(\"players/\".concat(t.props.teamName)).once(\"value\",function(e){n=e.val().score,i=e.val().counter}),2!==i&&t.props.firebaseRef.once(\"value\",function(e){t.setState({liveQuestion:e.val().liveQuestion}),t.optionUpdate(t.state.liveQuestion,a)}),s===a&&2!==i){var r=e.val().timeStamp,o=(new Date).getTime(),c=Math.round((o-r)/1e3),l=n+(50-c);p.database().ref(\"players/\".concat(t.props.teamName)).child(\"score\").set(l)}p.database().ref(\"players/\".concat(t.props.teamName)).child(\"counter\").set(2),t.setState({counter:2})})}},{key:\"liveQuestionSetter\",value:function(){var e=this;this.props.firebaseRef.once(\"value\",function(t){var a=t.val().liveQuestion;e.setState({liveQuestion:a}),e.currentQuestion()})}},{key:\"renderTimer\",value:function(){return 2!==this.state.counter?i.a.createElement(g.a,{className:\"timerCircle\",percentage:this.state.percentage,text:i.a.createElement(\"tspan\",{dx:-25,dy:6},\"00:\",this.state.timer),background:\"true\",backgroundPadding:0,strokeWidth:5,styles:{root:{},path:{stroke:\"rgba(250, 0, 250, \".concat(1,\")\"),strokeLinecap:\"butt\",transition:\"stroke-dashoffset 0.5s ease 0s\"},trail:{stroke:\"#d6d6d6\"},text:{fill:\"#34c\",fontSize:\"20px\"},background:{fill:\"white\"}}}):i.a.createElement(\"div\",null)}},{key:\"renderQuestion\",value:function(){return 2===this.state.counter?i.a.createElement(\"div\",null,i.a.createElement(\"img\",{id:\"waitImg\",src:k.a,alt:\"....\"})):i.a.createElement(\"div\",null,i.a.createElement(\"p\",{className:\"Question\"},this.state.question),i.a.createElement(\"br\",null),i.a.createElement(\"div\",{id:\"options\",className:\"Options text-center\"},i.a.createElement(\"div\",{className:\"row container optionGrp justify-content-center \"},i.a.createElement(\"div\",{id:\"a\",className:\"tag col-lg-5 text-center\",onClick:this.check.bind(this)},this.state.optiona),i.a.createElement(\"div\",{id:\"b\",className:\"tag col-lg-5 text-center\",onClick:this.check.bind(this)},this.state.optionb)),i.a.createElement(\"br\",null),i.a.createElement(\"div\",{className:\"row container optionGrp justify-content-center\",id:\"options\"},i.a.createElement(\"div\",{id:\"c\",className:\"tag col-lg-5\",onClick:this.check.bind(this)},this.state.optionc),i.a.createElement(\"div\",{id:\"d\",className:\"tag col-lg-5\",onClick:this.check.bind(this)},this.state.optiond))))}},{key:\"render\",value:function(){return i.a.createElement(\"div\",null,i.a.createElement(y,{teamName:this.props.teamName,participantName:this.props.participantName}),i.a.createElement(\"div\",{className:\"QuestionPage container\"},i.a.createElement(\"div\",{className:\"text-centre justify-content-center row\"},i.a.createElement(\"p\",{className:\"questionNumber tag\",style:{justifyContent:\"center\"}},\"Question \",this.state.liveQuestion,\" of 10\")),i.a.createElement(\"br\",null),this.renderQuestion(),i.a.createElement(\"br\",null),i.a.createElement(\"div\",{className:\"row\"},i.a.createElement(\"div\",{className:\"col-sm-5\"}),i.a.createElement(\"div\",{className:\"timer col-sm-4\"},this.renderTimer()))))}}]),t}(n.Component);a(147);p.initializeApp({apiKey:\"AIzaSyBPLVDzn-VHltDnx-dL1e_M_cPIQQqr8P4\",authDomain:\"adgquiz.firebaseapp.com\",databaseURL:\"https://adgquiz.firebaseio.com\",projectId:\"adgquiz\",storageBucket:\"adgquiz.appspot.com\",messagingSenderId:\"838063692472\"});var C=p.database().ref(\"players\"),O=p.database().ref(),Q=p.database(),j=p.database().ref(\"question\"),q=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(l.a)(this,Object(u.a)(t).call(this,e))).onPressRegisterButton=function(e){if(e.preventDefault(),a.setState({teamName:document.getElementById(\"TeamName\").value,password:document.getElementById(\"password\").value}),!1===a.state.registered)C.child(a.state.teamName).set({password:a.state.password,score:0,counter:0}),a.setState({registered:!0});else{var t=a.state.password,n=\"\";p.database().ref(\"players/\".concat(a.state.teamName)).once(\"value\",function(e){n=e.val().password,t===n&&a.setState({loggedIn:!0})})}},a.state={loadingSignUp:!1,registered:!1,loggedIn:!1,teamName:\"\",password:\"\",participantName:\"\"},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"renderRegisterOrQuiz\",value:function(){return this.state.loggedIn?i.a.createElement(\"div\",null,\" \",i.a.createElement(S,{teamName:this.state.teamName,participantName:this.state.participantName,database:Q,user:C,firebaseRef:O,questions:j})):i.a.createElement(\"form\",{id:\"regDeco\",className:\"register\",onSubmit:this.onPressRegisterButton.bind(this),autoComplete:\"off\"},i.a.createElement(\"div\",{className:\"text-center\"},i.a.createElement(\"img\",{src:N.a,alt:\"logo\",id:\"reglogo\"}),i.a.createElement(\"h1\",null,\"Quiz\")),this.register())}},{key:\"teamNameOnChange\",value:function(e){var t=this;this.setState({teamName:e.target.value,loadingSignUp:!0}),C.once(\"value\",function(e){var a=Object.keys(e.val()).includes(t.state.teamName);t.setState({loadingSignUp:!1}),a?t.setState({registered:!0}):t.setState({registered:!1})})}},{key:\"participantNameOnChange\",value:function(e){this.setState({participantName:e.target.value})}},{key:\"passwordOnChange\",value:function(e){this.setState({password:document.getElementById(\"password\").value})}},{key:\"loginOrRegister\",value:function(){return!1===this.state.registered?i.a.createElement(\"div\",null,i.a.createElement(\"input\",{type:\"password\",id:\"password\",className:\"\",name:\"login\",placeholder:\"Password\",value:this.state.password,onChange:this.passwordOnChange.bind(this),required:!0}),i.a.createElement(\"br\",null),i.a.createElement(\"input\",{className:\"btn btn-primary\",id:\"rButton\",type:\"submit\",value:\"Register\"})):i.a.createElement(\"div\",null,i.a.createElement(\"input\",{type:\"password\",id:\"password\",className:\"\",name:\"login\",placeholder:\"Password\",value:this.state.password,onChange:this.passwordOnChange.bind(this),required:!0}),i.a.createElement(\"p\",{style:{color:\"blue\"}},\"Registered\"),i.a.createElement(\"br\",null),i.a.createElement(\"input\",{className:\"btn btn-primary\",id:\"rButton\",type:\"submit\",value:\"Log In\"}))}},{key:\"spinner\",value:function(){if(this.state.loadingSignUp)return i.a.createElement(v.a,{type:\"TailSpin\",color:\"#00BFFF\",height:\"55\",width:\"55\"})}},{key:\"register\",value:function(){return i.a.createElement(\"div\",{className:\"registerCard container\"},i.a.createElement(\"input\",{type:\"text\",id:\"TeamName\",className:\"\",name:\"login\",placeholder:\"Team Name\",value:this.state.teamName+\"\",autoComplete:\"off\",onChange:this.teamNameOnChange.bind(this),required:!0}),this.loginOrRegister())}},{key:\"render\",value:function(){return i.a.createElement(\"div\",{className:\"App \"},this.renderRegisterOrQuiz(),i.a.createElement(\"br\",null),i.a.createElement(\"br\",null),i.a.createElement(\"br\",null),i.a.createElement(\"div\",{id:\"loader\",className:\"text-center\"},this.spinner()))}}]),t}(n.Component);a(148),Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(i.a.createElement(q,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},30:function(e,t,a){e.exports=a.p+\"static/media/hackgridLogo.a80bfdd5.png\"},61:function(e,t,a){e.exports=a.p+\"static/media/Logo.182b63bb.png\"},62:function(e,t,a){e.exports=a.p+\"static/media/quiz.eca3a5d8.png\"},63:function(e,t,a){e.exports=a(149)},68:function(e,t,a){}},[[63,1,2]]]);","extractedComments":[]}