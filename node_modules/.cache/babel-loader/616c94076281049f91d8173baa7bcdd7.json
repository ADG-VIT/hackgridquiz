{"ast":null,"code":"import _classCallCheck from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/yash/WebDev/Quiz-Website/player-console/src/App.js\";\nimport React, { Component } from 'react';\nimport * as firebase from 'firebase';\nimport Loader from 'react-loader-spinner';\nimport QuizConsole from './components/QuizConsole';\nimport Logo from './image/hackgridLogo.png';\nimport './App.css';\nvar config = {\n  apiKey: \"AIzaSyBPLVDzn-VHltDnx-dL1e_M_cPIQQqr8P4\",\n  authDomain: \"adgquiz.firebaseapp.com\",\n  databaseURL: \"https://adgquiz.firebaseio.com\",\n  projectId: \"adgquiz\",\n  storageBucket: \"adgquiz.appspot.com\",\n  messagingSenderId: \"838063692472\"\n};\nfirebase.initializeApp(config);\nvar firebaseUser = firebase.database().ref(\"players\");\nvar firebaseRef = firebase.database().ref();\nvar database = firebase.database();\nvar firebaseQuestions = firebase.database().ref(\"question\");\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onPressRegisterButton = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        teamName: document.getElementById(\"TeamName\").value,\n        password: document.getElementById(\"password\").value\n      });\n\n      if (_this.state.registered === false) {\n        firebaseUser.child(_this.state.teamName).set({\n          password: _this.state.password,\n          score: 0,\n          counter: 0\n        });\n\n        _this.setState({\n          registered: true\n        });\n      } else {\n        var finPass = _this.state.password;\n        var pass = '';\n        var firebasePassCheck = firebase.database().ref(\"players/\".concat(_this.state.teamName));\n        firebasePassCheck.once('value', function (snapshot) {\n          pass = snapshot.val().password;\n\n          if (finPass === pass) {\n            _this.setState({\n              loggedIn: true\n            });\n          }\n        });\n      }\n    };\n\n    _this.state = {\n      loadingSignUp: false,\n      registered: false,\n      loggedIn: false,\n      teamName: '',\n      password: '',\n      participantName: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"renderRegisterOrQuiz\",\n    value: function renderRegisterOrQuiz() {\n      if (this.state.loggedIn) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \" \", React.createElement(QuizConsole, {\n        teamName: this.state.teamName,\n        participantName: this.state.participantName,\n        database: database,\n        user: firebaseUser,\n        firebaseRef: firebaseRef,\n        questions: firebaseQuestions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n      return React.createElement(\"form\", {\n        className: \"register\",\n        onSubmit: this.onPressRegisterButton.bind(this),\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"regDeco\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: Logo,\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), this.register());\n    }\n  }, {\n    key: \"teamNameOnChange\",\n    value: function teamNameOnChange(event) {\n      var _this2 = this;\n\n      this.setState({\n        teamName: event.target.value,\n        loadingSignUp: true\n      });\n      firebaseUser.once('value', function (snapshot) {\n        var players = Object.keys(snapshot.val());\n        var userCheck = players.includes(_this2.state.teamName);\n\n        _this2.setState({\n          loadingSignUp: false\n        });\n\n        if (userCheck) _this2.setState({\n          registered: true\n        });else _this2.setState({\n          registered: false\n        });\n      });\n    }\n  }, {\n    key: \"participantNameOnChange\",\n    value: function participantNameOnChange(event) {\n      this.setState({\n        participantName: event.target.value\n      });\n    }\n  }, {\n    key: \"passwordOnChange\",\n    value: function passwordOnChange(event) {\n      this.setState({\n        password: document.getElementById(\"password\").value\n      });\n    }\n  }, {\n    key: \"loginOrRegister\",\n    value: function loginOrRegister() {\n      if (this.state.registered === false) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        className: \"\",\n        name: \"login\",\n        placeholder: \"password\",\n        value: this.state.password,\n        onChange: this.passwordOnChange.bind(this),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"btn btn-primary\",\n        id: \"rButton\",\n        type: \"submit\",\n        value: \"Register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        className: \"\",\n        name: \"login\",\n        placeholder: \"password\",\n        value: this.state.password,\n        onChange: this.passwordOnChange.bind(this),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Registered\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"btn btn-primary\",\n        id: \"rButton\",\n        type: \"submit\",\n        value: \"Log In\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"spinner\",\n    value: function spinner() {\n      if (this.state.loadingSignUp) return React.createElement(Loader, {\n        type: \"TailSpin\",\n        color: \"#00BFFF\",\n        height: \"55\",\n        width: \"55\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"register\",\n    value: function register() {\n      return React.createElement(\"div\", {\n        className: \"registerCard container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"TeamName\",\n        className: \"\",\n        name: \"login\",\n        placeholder: \"Team Name\",\n        value: this.state.teamName + '',\n        autoComplete: \"off\",\n        onChange: this.teamNameOnChange.bind(this),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), this.loginOrRegister());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.renderRegisterOrQuiz(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, this.spinner()));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/yash/WebDev/Quiz-Website/player-console/src/App.js"],"names":["React","Component","firebase","Loader","QuizConsole","Logo","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initializeApp","firebaseUser","database","ref","firebaseRef","firebaseQuestions","App","props","onPressRegisterButton","event","preventDefault","setState","teamName","document","getElementById","value","password","state","registered","child","set","score","counter","finPass","pass","firebasePassCheck","once","snapshot","val","loggedIn","loadingSignUp","participantName","bind","register","target","players","Object","keys","userCheck","includes","passwordOnChange","color","teamNameOnChange","loginOrRegister","renderRegisterOrQuiz","spinner"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as firebase from 'firebase';\nimport Loader from 'react-loader-spinner'\nimport QuizConsole from './components/QuizConsole';\nimport Logo from './image/hackgridLogo.png';\nimport './App.css';\n\n\nvar config = {\n  apiKey: \"AIzaSyBPLVDzn-VHltDnx-dL1e_M_cPIQQqr8P4\",\n  authDomain: \"adgquiz.firebaseapp.com\",\n  databaseURL: \"https://adgquiz.firebaseio.com\",\n  projectId: \"adgquiz\",\n  storageBucket: \"adgquiz.appspot.com\",\n  messagingSenderId: \"838063692472\"\n};\nfirebase.initializeApp(config);\n\nconst firebaseUser = firebase.database().ref(`players`);\nconst firebaseRef = firebase.database().ref();\nconst database = firebase.database();\nconst firebaseQuestions = firebase.database().ref(`question`);\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    \n\n    this.state = { \n      loadingSignUp: false,\n      registered: false,\n      loggedIn: false,\n      teamName: '',\n      password: '',\n      participantName: ''\n     }\n  }\n\n\n\n\n  renderRegisterOrQuiz(){\n    if(this.state.loggedIn)\n    return(\n      <div> <QuizConsole teamName={this.state.teamName} participantName={this.state.participantName} database={database} user={firebaseUser} firebaseRef={firebaseRef} questions={firebaseQuestions}/></div>\n     \n    )\n\n    return(\n      <form className =\"register\" onSubmit={this.onPressRegisterButton.bind(this)} autoComplete=\"off\">\n      <div id=\"regDeco\" className=\"text-center\">\n        <img src={Logo} alt=\"logo\"></img>\n      </div>\n          {this.register()}\n      </form>\n    )\n  }\n\n  teamNameOnChange(event){\n    this.setState({ teamName: event.target.value,\n                    loadingSignUp: true});\n    firebaseUser.once('value', (snapshot)=> {\n      let players = Object.keys(snapshot.val());\n        let userCheck = players.includes(this.state.teamName);\n        this.setState({loadingSignUp: false})\n       if (userCheck)\n       this.setState({registered: true})\n       else\n       this.setState({registered: false})\n    })\n    \n  }\n\n  participantNameOnChange(event){\n    this.setState({participantName: event.target.value});\n  }\n\n  passwordOnChange(event){\n  \n    this.setState({ password: document.getElementById(\"password\").value});\n    \n\n  }\n\n  onPressRegisterButton=(event)=>{\n    event.preventDefault();\n    this.setState({\n      teamName: document.getElementById(\"TeamName\").value,\n      password: document.getElementById(\"password\").value,\n    })\n    if(this.state.registered===false)\n    {\n      firebaseUser.child(this.state.teamName).set({\n        password: this.state.password,\n        score: 0,\n        counter: 0,\n      });\n      this.setState({registered: true})\n    }\n    else{\n      let finPass = this.state.password;\n      let pass='';\n      let firebasePassCheck = firebase.database().ref(`players/${this.state.teamName}`);\n    firebasePassCheck.once('value', (snapshot)=> {\n      pass= snapshot.val().password;\n\n      if(finPass===pass)\n      {\n        this.setState({\n          loggedIn: true,\n        })\n      }\n    });\n    \n    }\n  }\n\n  loginOrRegister(){\n    \n    if(this.state.registered===false)\n    return(\n      <div>\n      <input type=\"password\" id=\"password\" className=\"\" name=\"login\" placeholder=\"password\" value={this.state.password} onChange={this.passwordOnChange.bind(this)} required/>      \n      <br/>\n      <input className=\"btn btn-primary\" id=\"rButton\" type=\"submit\" value=\"Register\"/>\n      </div>\n    )\n\n    return(\n      <div>\n      <input type=\"password\" id=\"password\" className=\"\" name=\"login\" placeholder=\"password\" value={this.state.password} onChange={this.passwordOnChange.bind(this)} required/>\n      <p style={{color: 'blue'}}>Registered</p>      \n      <br/>\n      <input className=\"btn btn-primary\" id=\"rButton\" type=\"submit\" value=\"Log In\"/>\n      </div>\n    )\n  }\n\n  spinner(){\n    if(this.state.loadingSignUp)\n    return(\n      <Loader\n         type=\"TailSpin\"\n         color=\"#00BFFF\"\n         height=\"55\"\t\n         width=\"55\"\n      /> \n    )\n  }\n\n  register(){\n    return(\n      <div className=\"registerCard container\">\n      <input type=\"text\" id=\"TeamName\" className=\"\" name=\"login\" placeholder=\"Team Name\" value={this.state.teamName + ''} autoComplete=\"off\" onChange={this.teamNameOnChange.bind(this)} required/>\n      {this.loginOrRegister()}\n      </div>\n    )\n  }\n\n  render() { \n    return ( \n      <div className=\"App \" >\n      {this.renderRegisterOrQuiz()}\n<br/>\n<br/>\n<br/>\n<div id=\"loader\" className=\"text-center\">{this.spinner()}</div>\n      </div>\n     );\n  }\n}\n \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}