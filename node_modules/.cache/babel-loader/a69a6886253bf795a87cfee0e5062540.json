{"ast":null,"code":"import _classCallCheck from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/yash/WebDev/Quiz-Website/player-console/src/components/QuizConsole.jsx\";\nimport React, { Component } from \"react\";\nimport CircularProgressbar from \"react-circular-progressbar\";\nimport * as firebase from \"firebase\";\nimport BrandHeader from \"./brandHeader\";\nvar needDominantBaselineFix = true;\n\nvar QuizConsole =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizConsole, _Component);\n\n  function QuizConsole(props) {\n    var _this;\n\n    _classCallCheck(this, QuizConsole);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizConsole).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.props.firebaseRef.on(\"value\", function (snapshot) {\n        if (snapshot.exists()) {\n          console.log(snapshot.val().liveQuestion);\n\n          _this.setState({\n            liveQuestion: snapshot.val().liveQuestion\n          });\n\n          _this.updateLiveQuestion();\n        }\n      });\n\n      var firebaseQuestionFind = _this.props.database.ref(\"question/q\".concat(_this.state.liveQuestion));\n\n      firebaseQuestionFind.on(\"value\", function (snapshot) {\n        console.log(snapshot.val().q);\n\n        _this.setState({\n          question: snapshot.val().q\n        });\n      });\n\n      var firebaseUserInfo = _this.props.database.ref(\"players/\".concat(_this.props.teamName));\n\n      firebaseUserInfo.child('counter').set(1);\n      firebaseUserInfo.once('value', function (snapshot) {\n        _this.setState({\n          counter: snapshot.val().counter,\n          score: snapshot.val().score\n        });\n      });\n    };\n\n    _this.updateLiveQuestion = function () {\n      console.log(_this.state.score);\n\n      var firebaseQuestionFind = _this.props.database.ref(\"question/q\".concat(_this.state.liveQuestion));\n\n      firebaseQuestionFind.on(\"value\", function (snapshot) {\n        _this.setState({\n          question: snapshot.val().q,\n          correctAnswer: snapshot.val().a,\n          optiona: snapshot.val().optionA,\n          optionb: snapshot.val().optionB,\n          optionc: snapshot.val().optionC,\n          optiond: snapshot.val().optionD,\n          answered: false\n        });\n      });\n    };\n\n    _this.updateAnswer = function (event) {\n      _this.setState({\n        answer: event.target.id,\n        answered: true\n      });\n    };\n\n    _this.renderOptions = function () {\n      // if(this.state.answered===false && this.state.counter===1)\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row text-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"a\",\n        onClick: _this.updateAnswer.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, _this.state.optiona), React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"b\",\n        onClick: _this.updateAnswer.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, _this.state.optionb)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row text-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"c\",\n        onClick: _this.updateAnswer.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, _this.state.optionc), React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"d\",\n        onClick: _this.updateAnswer.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, _this.state.optiond)));\n      return React.createElement(\"div\", {\n        id: \"answeredOption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row text-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, _this.state.optiona), React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, _this.state.optionb)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row text-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, _this.state.optionc), React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, _this.state.optiond)), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"waitNext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Wait for next question\")));\n    };\n\n    _this.state = {\n      percentage: 20,\n      time: \"00:30\",\n      liveQuestion: 0,\n      question: \"\",\n      correctAnswer: \"\",\n      optiona: \"\",\n      optionb: \"\",\n      optionc: \"\",\n      optiond: \"\",\n      answer: \"\",\n      answered: false,\n      counter: 1,\n      score: 0\n    };\n    return _this;\n  }\n\n  _createClass(QuizConsole, [{\n    key: \"render\",\n    value: function render() {\n      // console.log(quesLive)\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(BrandHeader, {\n        teamName: this.props.teamName,\n        participantName: this.props.participantName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"QuestionPage container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-centre justify-content-center row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"questionNumber tag\",\n        style: {\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Quesetion \", this.state.liveQuestion, \" of 10\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"Question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, this.state.question), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, this.renderOptions()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"timer col-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(CircularProgressbar, {\n        className: \"timerCircle\",\n        percentage: this.state.percentage,\n        text: React.createElement(\"tspan\", {\n          dx: needDominantBaselineFix ? -25 : 0,\n          dy: needDominantBaselineFix ? +6 : 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, this.state.time),\n        background: \"true\",\n        backgroundPadding: 0,\n        strokeWidth: 5,\n        styles: {\n          // Customize the root svg element\n          root: {},\n          // Customize the path, i.e. the \"completed progress\"\n          path: {\n            // Path color\n            stroke: \"rgba(250, 0, 250, \".concat(this.state.percentage / 100, \")\"),\n            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n            strokeLinecap: \"butt\",\n            // Customize transition animation\n            transition: \"stroke-dashoffset 0.5s ease 0s\"\n          },\n          // Customize the circle behind the path, i.e. the \"total progress\"\n          trail: {\n            // Trail color\n            stroke: \"#d6d6d6\"\n          },\n          // Customize the text\n          text: {\n            // Text color\n            fill: \"#34c\",\n            // Text size\n            fontSize: \"20px\"\n          },\n          // Customize background - only used when the `background` prop is true\n          background: {\n            fill: \"white\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"continue tag col-sm-2 text-center\",\n        style: {\n          borderRadius: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Continue\"))));\n    }\n  }]);\n\n  return QuizConsole;\n}(Component);\n\n;\nexport default QuizConsole;","map":{"version":3,"sources":["/home/yash/WebDev/Quiz-Website/player-console/src/components/QuizConsole.jsx"],"names":["React","Component","CircularProgressbar","firebase","BrandHeader","needDominantBaselineFix","QuizConsole","props","componentDidMount","firebaseRef","on","snapshot","exists","console","log","val","liveQuestion","setState","updateLiveQuestion","firebaseQuestionFind","database","ref","state","q","question","firebaseUserInfo","teamName","child","set","once","counter","score","correctAnswer","a","optiona","optionA","optionb","optionB","optionc","optionC","optiond","optionD","answered","updateAnswer","event","answer","target","id","renderOptions","bind","percentage","time","participantName","justifyContent","root","path","stroke","strokeLinecap","transition","trail","text","fill","fontSize","background","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CircularProgressbar from \"react-circular-progressbar\";\nimport * as firebase from \"firebase\";\nimport BrandHeader from \"./brandHeader\";\n\nconst needDominantBaselineFix = true;\n\nclass QuizConsole extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      percentage: 20,\n      time: \"00:30\",\n      liveQuestion: 0,\n      question: \"\",\n      correctAnswer: \"\",\n      optiona: \"\",\n      optionb: \"\",\n      optionc: \"\",\n      optiond: \"\",\n      answer: \"\",\n      answered: false,\n      counter: 1,\n      score: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    this.props.firebaseRef.on(\"value\", snapshot => {\n      if (snapshot.exists()) {\n        console.log(snapshot.val().liveQuestion);\n        this.setState({ liveQuestion: snapshot.val().liveQuestion});\n        this.updateLiveQuestion();\n\n      }\n    });\n\n\n    let firebaseQuestionFind = this.props.database.ref(\n      `question/q${this.state.liveQuestion}`\n    );\n    firebaseQuestionFind.on(\"value\", snapshot => {\n      console.log(snapshot.val().q);\n      this.setState({ question: snapshot.val().q });\n    });\n    let firebaseUserInfo = this.props.database.ref(`players/${this.props.teamName}`);\n    firebaseUserInfo.child('counter').set(1);\n        firebaseUserInfo.once('value', (snapshot) =>{\n          \n            this.setState({counter: snapshot.val().counter,\n            score: snapshot.val().score})\n        })\n  };\n\n  updateLiveQuestion = () => {\n    console.log(this.state.score)\n    let firebaseQuestionFind = this.props.database.ref(\n      `question/q${this.state.liveQuestion}`\n    );\n    firebaseQuestionFind.on(\"value\", snapshot => {\n      \n      this.setState({\n        question: snapshot.val().q,\n        correctAnswer: snapshot.val().a,\n        optiona: snapshot.val().optionA,\n        optionb: snapshot.val().optionB,\n        optionc: snapshot.val().optionC,\n        optiond: snapshot.val().optionD,\n        answered: false,\n      });\n    });\n    \n  };\n\n \n  updateAnswer = event => {\n\n    this.setState({ answer: event.target.id,\n                    answered: true });\n \n       \n    } \n      \n  \n\n  // optionUpdate=()=>{\n  //   let firebaseQuestionFind2 = this.props.database.ref(`question/q${this.state.liveQuestion}`);\n\n  //   let optionACounter;\n  //   let optionBCounter;\n  //   let optionCCounter;\n  //   let optionDCounter;\n  //   firebaseQuestionFind2.once('value', function(snapshot) {\n  //       optionACounter = snapshot.val().optionACounter;\n  //       optionBCounter = snapshot.val().optionBCounter;\n  //       optionCCounter = snapshot.val().optionCCounter;\n  //       optionDCounter = snapshot.val().optionDCounter;\n  //   })\n\n  //   if (this.state.answer === 'a') {\n  //       optionACounter = optionACounter + 1;\n  //       firebaseQuestionFind2.child('optionACounter').set(optionACounter);\n  //   }\n\n  //   if (this.state.answer === 'b') {\n  //       optionBCounter = optionBCounter + 1;\n  //       firebaseQuestionFind2.child('optionBCounter').set(optionBCounter);\n  //   }\n\n  //   if (this.state.answer === 'c') {\n  //       optionCCounter = optionCCounter + 1;\n  //       firebaseQuestionFind2.child('optionCCounter').set(optionCCounter);\n  //   }\n\n  //   if (this.state.answer === 'd') {\n  //       optionDCounter = optionDCounter + 1;\n  //       firebaseQuestionFind2.child('optionDCounter').set(optionDCounter);\n  //   }\n  // }\n\n  renderOptions = () => {\n    // if(this.state.answered===false && this.state.counter===1)\n    return (\n      <div>\n        <div className=\"row text-center justify-content-center\">\n          <button\n            className=\"tag col-sm-5\"\n            id=\"a\"\n            onClick={this.updateAnswer.bind(this)}\n          >\n            {this.state.optiona}\n          </button>\n          <button\n            className=\"tag col-sm-5\"\n            id=\"b\" \n            onClick={this.updateAnswer.bind(this)}\n          >\n            {this.state.optionb}\n          </button>\n        </div>\n        <br />\n        <div className=\"row text-center justify-content-center\">\n          <button\n            className=\"tag col-sm-5\"\n            id=\"c\"\n            onClick={this.updateAnswer.bind(this)}\n          >\n            {this.state.optionc}\n          </button>\n          <button\n            className=\"tag col-sm-5\"\n            id=\"d\"\n            onClick={this.updateAnswer.bind(this)}\n          >\n            {this.state.optiond}\n          </button>\n        </div>\n      </div>\n    );\n\n    return(\n      <div id=\"answeredOption\">\n         <div className=\"row text-center justify-content-center\">\n          <button\n            className=\"tag col-sm-5\"\n            id=\"a\"\n          >\n            {this.state.optiona}\n          </button>\n          <button\n            className=\"tag col-sm-5\"\n            id=\"b\"\n          >\n            {this.state.optionb}\n          </button>\n        </div>\n        <br />\n        <div className=\"row text-center justify-content-center\">\n          <button\n            className=\"tag col-sm-5\"\n            id=\"c\"\n          >\n            {this.state.optionc}\n          </button>\n          <button\n            className=\"tag col-sm-5\"\n            id=\"d\"\n          >\n            {this.state.optiond}\n          </button>\n        </div>\n        <div className=\"row\" >\n          <p id=\"waitNext\">Wait for next question</p>\n        </div>\n      </div>\n    )\n  };\n\n  render() {  \n    // console.log(quesLive)\n\n    return (\n      <div>\n        <BrandHeader\n          teamName={this.props.teamName}\n          participantName={this.props.participantName}\n        />\n        <div className=\"QuestionPage container\">\n          <div className=\"text-centre justify-content-center row\">\n            <p\n              className=\"questionNumber tag\"\n              style={{ justifyContent: \"center\" }}\n            >\n              Quesetion {this.state.liveQuestion} of 10\n            </p>\n          </div>\n          <br />\n          <p className=\"Question\">\n            {/* Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dolores\n            optio sint repellendus quas, quos, omnis alias quidem, adipisicing\n            elit. Dolores optio sint repellendus quas, quos, omnis alias quidem */}\n            {this.state.question}\n          </p>\n          <br />\n          <div id=\"options\">{this.renderOptions()}</div>\n          <br />\n          <div className=\"row\">\n            <div className=\"col-sm-5\" />\n            <div className=\"timer col-sm-4\">\n              <CircularProgressbar\n                className=\"timerCircle\"\n                percentage={this.state.percentage}\n                text={\n                  <tspan\n                    dx={needDominantBaselineFix ? -25 : 0}\n                    dy={needDominantBaselineFix ? +6 : 0}\n                  >\n                    {this.state.time}\n                  </tspan>\n                }\n                background=\"true\"\n                backgroundPadding={0}\n                strokeWidth={5}\n                styles={{\n                  // Customize the root svg element\n                  root: {},\n                  // Customize the path, i.e. the \"completed progress\"\n                  path: {\n                    // Path color\n                    stroke: `rgba(250, 0, 250, ${this.state.percentage / 100})`,\n                    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                    strokeLinecap: \"butt\",\n                    // Customize transition animation\n                    transition: \"stroke-dashoffset 0.5s ease 0s\"\n                  },\n                  // Customize the circle behind the path, i.e. the \"total progress\"\n                  trail: {\n                    // Trail color\n                    stroke: \"#d6d6d6\"\n                  },\n                  // Customize the text\n                  text: {\n                    // Text color\n                    fill: \"#34c\",\n                    // Text size\n                    fontSize: \"20px\"\n                  },\n                  // Customize background - only used when the `background` prop is true\n                  background: {\n                    fill: \"white\"\n                  }\n                }}\n              />\n            </div>\n\n            <div\n              className=\"continue tag col-sm-2 text-center\"\n              style={{ borderRadius: 25 }}\n            >\n              Continue\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default QuizConsole;\n"]},"metadata":{},"sourceType":"module"}