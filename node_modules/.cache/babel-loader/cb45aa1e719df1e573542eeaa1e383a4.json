{"ast":null,"code":"import _classCallCheck from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/yash/WebDev/Quiz-Website/player-console/src/components/QuizConsole.jsx\";\nimport React, { Component } from \"react\";\nimport CircularProgressbar from \"react-circular-progressbar\";\nimport * as firebase from \"firebase\";\nimport BrandHeader from \"./brandHeader\";\nvar needDominantBaselineFix = true;\n\nvar QuizConsole =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizConsole, _Component);\n\n  function QuizConsole(props) {\n    var _this;\n\n    _classCallCheck(this, QuizConsole);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizConsole).call(this, props));\n\n    _this.componentDidMount = function () {\n      document.querySelector(\"#a\").setAttribute(\"disabled\", false);\n\n      _this.props.firebaseRef.on(\"value\", function (snapshot) {\n        if (snapshot.exists()) {\n          console.log(snapshot.val().liveQuestion);\n\n          _this.setState({\n            liveQuestion: snapshot.val().liveQuestion,\n            counter: 1\n          });\n\n          document.querySelector(\"#a\").setAttribute(\"disabled\", false);\n\n          _this.updateLiveQuestion();\n        }\n      });\n\n      var firebaseQuestionFind = _this.props.database.ref(\"question/q\".concat(_this.state.liveQuestion));\n\n      firebaseQuestionFind.on(\"value\", function (snapshot) {\n        console.log(snapshot.val().q);\n\n        _this.setState({\n          question: snapshot.val().q\n        });\n      });\n\n      var firebaseUserInfo = _this.props.database.ref(\"players/\".concat(_this.props.teamName));\n\n      firebaseUserInfo.once('value', function (snapshot) {\n        _this.setState({\n          counter: snapshot.val().counter,\n          score: snapshot.val().score\n        });\n      });\n    };\n\n    _this.updateLiveQuestion = function () {\n      var firebaseQuestionFind = _this.props.database.ref(\"question/q\".concat(_this.state.liveQuestion));\n\n      firebaseQuestionFind.on(\"value\", function (snapshot) {\n        console.log(snapshot.val().q);\n        console.log(snapshot.val().a);\n        console.log(snapshot.val().optionA);\n\n        _this.setState({\n          question: snapshot.val().q,\n          correctAnswer: snapshot.val().a,\n          optiona: snapshot.val().optionA,\n          optionb: snapshot.val().optionB,\n          optionc: snapshot.val().optionC,\n          optiond: snapshot.val().optionD,\n          answered: false\n        });\n      });\n    };\n\n    _this.updateAnswer = function (event) {\n      document.querySelector(\"#\".concat(event.target.id)).setAttribute(\"disabled\", true);\n\n      _this.setState({\n        answer: event.target.id,\n        answered: true\n      });\n\n      var firebaseChangeCounter2 = _this.props.database.ref(\"players/\".concat(_this.props.teamName));\n\n      firebaseChangeCounter2.child('counter').set(2);\n\n      _this.setState({\n        counter: 2\n      });\n    };\n\n    _this.renderOptions = function () {\n      if (_this.state.answered === false && _this.state.counter === 1) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row text-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"a\",\n        onClick: _this.updateAnswer.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, _this.state.optiona), React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"b\",\n        onClick: _this.updateAnswer.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, _this.state.optionb)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row text-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"c\",\n        onClick: _this.updateAnswer.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, _this.state.optionc), React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"d\",\n        onClick: _this.updateAnswer.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, _this.state.optiond)));\n      return React.createElement(\"div\", {\n        id: \"answeredOption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row text-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, _this.state.optiona), React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, _this.state.optionb)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row text-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, _this.state.optionc), React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, _this.state.optiond)), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"waitNext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Wait for next question\")));\n    };\n\n    _this.state = {\n      percentage: 20,\n      time: \"00:30\",\n      liveQuestion: 0,\n      question: \"\",\n      correctAnswer: \"\",\n      optiona: \"\",\n      optionb: \"\",\n      optionc: \"\",\n      optiond: \"\",\n      answer: \"\",\n      answered: false,\n      counter: 1,\n      score: 0\n    };\n    return _this;\n  }\n\n  _createClass(QuizConsole, [{\n    key: \"render\",\n    value: function render() {\n      // console.log(quesLive)\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(BrandHeader, {\n        teamName: this.props.teamName,\n        participantName: this.props.participantName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"QuestionPage container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-centre justify-content-center row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"questionNumber tag\",\n        style: {\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Quesetion \", this.state.liveQuestion, \" of 10\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"Question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, this.state.question), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, this.renderOptions()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"timer col-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(CircularProgressbar, {\n        className: \"timerCircle\",\n        percentage: this.state.percentage,\n        text: React.createElement(\"tspan\", {\n          dx: needDominantBaselineFix ? -25 : 0,\n          dy: needDominantBaselineFix ? +6 : 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, this.state.time),\n        background: \"true\",\n        backgroundPadding: 0,\n        strokeWidth: 5,\n        styles: {\n          // Customize the root svg element\n          root: {},\n          // Customize the path, i.e. the \"completed progress\"\n          path: {\n            // Path color\n            stroke: \"rgba(250, 0, 250, \".concat(this.state.percentage / 100, \")\"),\n            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n            strokeLinecap: \"butt\",\n            // Customize transition animation\n            transition: \"stroke-dashoffset 0.5s ease 0s\"\n          },\n          // Customize the circle behind the path, i.e. the \"total progress\"\n          trail: {\n            // Trail color\n            stroke: \"#d6d6d6\"\n          },\n          // Customize the text\n          text: {\n            // Text color\n            fill: \"#34c\",\n            // Text size\n            fontSize: \"20px\"\n          },\n          // Customize background - only used when the `background` prop is true\n          background: {\n            fill: \"white\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"continue tag col-sm-2 text-center\",\n        style: {\n          borderRadius: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Continue\"))));\n    }\n  }]);\n\n  return QuizConsole;\n}(Component);\n\nexport default QuizConsole;","map":{"version":3,"sources":["/home/yash/WebDev/Quiz-Website/player-console/src/components/QuizConsole.jsx"],"names":["React","Component","CircularProgressbar","firebase","BrandHeader","needDominantBaselineFix","QuizConsole","props","componentDidMount","document","querySelector","setAttribute","firebaseRef","on","snapshot","exists","console","log","val","liveQuestion","setState","counter","updateLiveQuestion","firebaseQuestionFind","database","ref","state","q","question","firebaseUserInfo","teamName","once","score","a","optionA","correctAnswer","optiona","optionb","optionB","optionc","optionC","optiond","optionD","answered","updateAnswer","event","target","id","answer","firebaseChangeCounter2","child","set","renderOptions","bind","percentage","time","participantName","justifyContent","root","path","stroke","strokeLinecap","transition","trail","text","fill","fontSize","background","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CircularProgressbar from \"react-circular-progressbar\";\nimport * as firebase from \"firebase\";\nimport BrandHeader from \"./brandHeader\";\n\nconst needDominantBaselineFix = true;\n\nclass QuizConsole extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      percentage: 20,\n      time: \"00:30\",\n      liveQuestion: 0,\n      question: \"\",\n      correctAnswer: \"\",\n      optiona: \"\",\n      optionb: \"\",\n      optionc: \"\",\n      optiond: \"\",\n      answer: \"\",\n      answered: false,\n      counter: 1,\n      score: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    document\n    .querySelector(\"#a\")\n    .setAttribute(\"disabled\", false);\n    this.props.firebaseRef.on(\"value\", snapshot => {\n      if (snapshot.exists()) {\n        console.log(snapshot.val().liveQuestion);\n        this.setState({ liveQuestion: snapshot.val().liveQuestion,\n        counter: 1 });\n        document\n    .querySelector(\"#a\")\n    .setAttribute(\"disabled\", false);\n        this.updateLiveQuestion();\n      }\n    });\n\n    let firebaseQuestionFind = this.props.database.ref(\n      `question/q${this.state.liveQuestion}`\n    );\n    firebaseQuestionFind.on(\"value\", snapshot => {\n      console.log(snapshot.val().q);\n      this.setState({ question: snapshot.val().q });\n    });\n    let firebaseUserInfo = this.props.database.ref(`players/${this.props.teamName}`);\n        firebaseUserInfo.once('value', (snapshot) =>{\n            this.setState({counter: snapshot.val().counter,\n            score: snapshot.val().score})\n        })\n  };\n\n  updateLiveQuestion = () => {\n    \n    let firebaseQuestionFind = this.props.database.ref(\n      `question/q${this.state.liveQuestion}`\n    );\n    firebaseQuestionFind.on(\"value\", snapshot => {\n      console.log(snapshot.val().q);\n      console.log(snapshot.val().a);\n      console.log(snapshot.val().optionA);\n      this.setState({\n        question: snapshot.val().q,\n        correctAnswer: snapshot.val().a,\n        optiona: snapshot.val().optionA,\n        optionb: snapshot.val().optionB,\n        optionc: snapshot.val().optionC,\n        optiond: snapshot.val().optionD,\n        answered: false,\n      });\n    });\n    \n  };\n\n  updateAnswer = event => {\n    document\n      .querySelector(`#${event.target.id}`)\n      .setAttribute(\"disabled\", true);\n    this.setState({ answer: event.target.id,\n                    answered: true });\n    let firebaseChangeCounter2 = this.props.database.ref(`players/${this.props.teamName}`);\n    firebaseChangeCounter2.child('counter').set(2);\n    this.setState({counter: 2})\n  };\n\n  renderOptions = () => {\n    if(this.state.answered===false && this.state.counter===1)\n    return (\n      <div>\n        <div className=\"row text-center justify-content-center\">\n          <button\n            className=\"tag col-sm-5\"\n            id=\"a\"\n            onClick={this.updateAnswer.bind(this)}\n          >\n            {this.state.optiona}\n          </button>\n          <button\n            className=\"tag col-sm-5\"\n            id=\"b\"\n            onClick={this.updateAnswer.bind(this)}\n          >\n            {this.state.optionb}\n          </button>\n        </div>\n        <br />\n        <div className=\"row text-center justify-content-center\">\n          <button\n            className=\"tag col-sm-5\"\n            id=\"c\"\n            onClick={this.updateAnswer.bind(this)}\n          >\n            {this.state.optionc}\n          </button>\n          <button\n            className=\"tag col-sm-5\"\n            id=\"d\"\n            onClick={this.updateAnswer.bind(this)}\n          >\n            {this.state.optiond}\n          </button>\n        </div>\n      </div>\n    );\n\n    return(\n      <div id=\"answeredOption\">\n         <div className=\"row text-center justify-content-center\">\n          <button\n            className=\"tag col-sm-5\"\n            id=\"a\"\n          >\n            {this.state.optiona}\n          </button>\n          <button\n            className=\"tag col-sm-5\"\n            id=\"b\"\n          >\n            {this.state.optionb}\n          </button>\n        </div>\n        <br />\n        <div className=\"row text-center justify-content-center\">\n          <button\n            className=\"tag col-sm-5\"\n            id=\"c\"\n          >\n            {this.state.optionc}\n          </button>\n          <button\n            className=\"tag col-sm-5\"\n            id=\"d\"\n          >\n            {this.state.optiond}\n          </button>\n        </div>\n        <div className=\"row\" >\n          <p id=\"waitNext\">Wait for next question</p>\n        </div>\n      </div>\n    )\n  };\n\n  render() {\n    // console.log(quesLive)\n\n    return (\n      <div>\n        <BrandHeader\n          teamName={this.props.teamName}\n          participantName={this.props.participantName}\n        />\n        <div className=\"QuestionPage container\">\n          <div className=\"text-centre justify-content-center row\">\n            <p\n              className=\"questionNumber tag\"\n              style={{ justifyContent: \"center\" }}\n            >\n              Quesetion {this.state.liveQuestion} of 10\n            </p>\n          </div>\n          <br />\n          <p className=\"Question\">\n            {/* Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dolores\n            optio sint repellendus quas, quos, omnis alias quidem, adipisicing\n            elit. Dolores optio sint repellendus quas, quos, omnis alias quidem */}\n            {this.state.question}\n          </p>\n          <br />\n          <div id=\"options\">{this.renderOptions()}</div>\n          <br />\n          <div className=\"row\">\n            <div className=\"col-sm-5\" />\n            <div className=\"timer col-sm-4\">\n              <CircularProgressbar\n                className=\"timerCircle\"\n                percentage={this.state.percentage}\n                text={\n                  <tspan\n                    dx={needDominantBaselineFix ? -25 : 0}\n                    dy={needDominantBaselineFix ? +6 : 0}\n                  >\n                    {this.state.time}\n                  </tspan>\n                }\n                background=\"true\"\n                backgroundPadding={0}\n                strokeWidth={5}\n                styles={{\n                  // Customize the root svg element\n                  root: {},\n                  // Customize the path, i.e. the \"completed progress\"\n                  path: {\n                    // Path color\n                    stroke: `rgba(250, 0, 250, ${this.state.percentage / 100})`,\n                    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                    strokeLinecap: \"butt\",\n                    // Customize transition animation\n                    transition: \"stroke-dashoffset 0.5s ease 0s\"\n                  },\n                  // Customize the circle behind the path, i.e. the \"total progress\"\n                  trail: {\n                    // Trail color\n                    stroke: \"#d6d6d6\"\n                  },\n                  // Customize the text\n                  text: {\n                    // Text color\n                    fill: \"#34c\",\n                    // Text size\n                    fontSize: \"20px\"\n                  },\n                  // Customize background - only used when the `background` prop is true\n                  background: {\n                    fill: \"white\"\n                  }\n                }}\n              />\n            </div>\n\n            <div\n              className=\"continue tag col-sm-2 text-center\"\n              style={{ borderRadius: 25 }}\n            >\n              Continue\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuizConsole;\n"]},"metadata":{},"sourceType":"module"}