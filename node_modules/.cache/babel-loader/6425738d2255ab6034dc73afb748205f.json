{"ast":null,"code":"import _classCallCheck from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/yash/WebDev/Quiz-Website/player-console/src/components/QuizConsole.jsx\";\nimport React, { Component } from \"react\";\nimport CircularProgressbar from \"react-circular-progressbar\";\nimport * as firebase from \"firebase\";\nimport BrandHeader from \"./brandHeader\";\nvar needDominantBaselineFix = true;\n\nvar QuizConsole =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizConsole, _Component);\n\n  function QuizConsole(props) {\n    var _this;\n\n    _classCallCheck(this, QuizConsole);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizConsole).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.props.firebaseRef.on('value', function (snapshot) {\n        if (snapshot.exists()) {\n          console.log(snapshot.val().liveQuestion);\n\n          _this.setState({\n            liveQuestion: snapshot.val().liveQuestion\n          });\n\n          _this.updateLiveQuestion();\n        }\n      });\n\n      var firebaseQuestionFind = _this.props.database.ref(\"question/q\".concat(_this.state.liveQuestion));\n\n      firebaseQuestionFind.on('value', function (snapshot) {\n        console.log(snapshot.val().q);\n\n        _this.setState({\n          question: snapshot.val().q\n        });\n      });\n    };\n\n    _this.updateLiveQuestion = function () {\n      var firebaseQuestionFind = _this.props.database.ref(\"question/q\".concat(_this.state.liveQuestion));\n\n      firebaseQuestionFind.on('value', function (snapshot) {\n        console.log(snapshot.val().q);\n        console.log(snapshot.val().a);\n        console.log(snapshot.val().optionA);\n\n        _this.setState({\n          question: snapshot.val().q,\n          correctAnswer: snapshot.val().a,\n          optionA: snapshot.val().optionA,\n          optionB: snapshot.val().optionB,\n          optionC: snapshot.val().optionC,\n          optionD: snapshot.val().optionD\n        });\n      });\n    };\n\n    _this.updateAnswer = function (event) {\n      _this.setState({\n        answer: event.target.id\n      });\n\n      console.log(_this.state.answer);\n    };\n\n    _this.state = {\n      percentage: 20,\n      time: \"00:30\",\n      liveQuestion: 0,\n      question: '',\n      correctAnswer: '',\n      optionA: '',\n      optionB: '',\n      optionC: '',\n      optionD: '',\n      answer: ''\n    };\n    return _this;\n  }\n\n  _createClass(QuizConsole, [{\n    key: \"render\",\n    value: function render() {\n      var teamName = this.props.teamName; // console.log(quesLive)\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(BrandHeader, {\n        teamName: teamName,\n        participantName: this.props.participantName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"QuestionPage container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-centre justify-content-center row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"questionNumber tag\",\n        style: {\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Quesetion \", this.state.liveQuestion, \" of 10\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"Question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.question), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row text-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag col-sm-5\",\n        id: \"a\",\n        onClick: this.updateAnswer.bind(this),\n        disabled: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.optionA), React.createElement(\"div\", {\n        className: \"tag col-sm-5\",\n        id: \"b\",\n        onClick: this.updateAnswer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.state.optionB)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row text-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tag col-sm-5\",\n        id: \"c\",\n        onClick: this.updateAnswer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.state.optionC), React.createElement(\"div\", {\n        className: \"tag col-sm-5\",\n        id: \"d\",\n        onClick: this.updateAnswer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.optionD))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"timer col-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(CircularProgressbar, {\n        className: \"timerCircle\",\n        percentage: this.state.percentage,\n        text: React.createElement(\"tspan\", {\n          dx: needDominantBaselineFix ? -25 : 0,\n          dy: needDominantBaselineFix ? +6 : 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, this.state.time),\n        background: \"true\",\n        backgroundPadding: 0,\n        strokeWidth: 5,\n        styles: {\n          // Customize the root svg element\n          root: {},\n          // Customize the path, i.e. the \"completed progress\"\n          path: {\n            // Path color\n            stroke: \"rgba(250, 0, 250, \".concat(this.state.percentage / 100, \")\"),\n            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n            strokeLinecap: \"butt\",\n            // Customize transition animation\n            transition: \"stroke-dashoffset 0.5s ease 0s\"\n          },\n          // Customize the circle behind the path, i.e. the \"total progress\"\n          trail: {\n            // Trail color\n            stroke: \"#d6d6d6\"\n          },\n          // Customize the text\n          text: {\n            // Text color\n            fill: \"#34c\",\n            // Text size\n            fontSize: \"20px\"\n          },\n          // Customize background - only used when the `background` prop is true\n          background: {\n            fill: \"white\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"continue tag col-sm-2 text-center\",\n        style: {\n          borderRadius: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Continue\"))));\n    }\n  }]);\n\n  return QuizConsole;\n}(Component);\n\nexport default QuizConsole;","map":{"version":3,"sources":["/home/yash/WebDev/Quiz-Website/player-console/src/components/QuizConsole.jsx"],"names":["React","Component","CircularProgressbar","firebase","BrandHeader","needDominantBaselineFix","QuizConsole","props","componentDidMount","firebaseRef","on","snapshot","exists","console","log","val","liveQuestion","setState","updateLiveQuestion","firebaseQuestionFind","database","ref","state","q","question","a","optionA","correctAnswer","optionB","optionC","optionD","updateAnswer","event","answer","target","id","percentage","time","teamName","participantName","justifyContent","bind","root","path","stroke","strokeLinecap","transition","trail","text","fill","fontSize","background","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CircularProgressbar from \"react-circular-progressbar\";\nimport * as firebase from \"firebase\";\nimport BrandHeader from \"./brandHeader\";\n\nconst needDominantBaselineFix = true;\n\n\nclass QuizConsole extends Component {\n  constructor(props) {\n    super(props);\n\n\n\n    this.state = {\n      percentage: 20,\n      time: \"00:30\",\n      liveQuestion: 0,\n      question: '',\n      correctAnswer: '',\n      optionA: '',\n      optionB: '',\n      optionC: '',\n      optionD: '',\n      answer: '',\n    };\n  }\n\n  componentDidMount = () => {\n        this.props.firebaseRef.on('value', (snapshot) =>{\n      if (snapshot.exists()) {\n          console.log(snapshot.val().liveQuestion);\n          this.setState({liveQuestion: snapshot.val().liveQuestion});\n          this.updateLiveQuestion();\n      }\n    })\n    \n    let firebaseQuestionFind = this.props.database.ref(`question/q${this.state.liveQuestion}`);\n    firebaseQuestionFind.on('value', (snapshot)=> {\n      console.log(snapshot.val().q);\n      this.setState({question: snapshot.val().q})\n    });\n\n  };\n\n  updateLiveQuestion=()=>{\n    let firebaseQuestionFind = this.props.database.ref(`question/q${this.state.liveQuestion}`);\n    firebaseQuestionFind.on('value', (snapshot)=> {\n      console.log(snapshot.val().q);\n      console.log(snapshot.val().a);\n      console.log(snapshot.val().optionA);\n      this.setState({question: snapshot.val().q,\n                      correctAnswer: snapshot.val().a,\n                    optionA: snapshot.val().optionA,\n                    optionB: snapshot.val().optionB,\n                    optionC: snapshot.val().optionC,\n                    optionD: snapshot.val().optionD,})\n    });\n}\n\n  updateAnswer=(event)=>{\n    this.setState({answer: event.target.id});\n    console.log(this.state.answer);\n  }\n\n  render() {\n\n\n    var teamName = this.props.teamName;\n    // console.log(quesLive)\n\n    return (\n      <div>\n        <BrandHeader\n          teamName={teamName}\n          participantName={this.props.participantName}\n        />\n        <div className=\"QuestionPage container\">\n          <div className=\"text-centre justify-content-center row\">\n            <p\n              className=\"questionNumber tag\"\n              style={{ justifyContent: \"center\" }}\n            >\n              Quesetion {this.state.liveQuestion} of 10\n            </p>\n          </div>\n          <br />\n          <p className=\"Question\">\n            {/* Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dolores\n            optio sint repellendus quas, quos, omnis alias quidem, adipisicing\n            elit. Dolores optio sint repellendus quas, quos, omnis alias quidem */}\n            {this.state.question}\n          </p>\n          <br />\n          <div id=\"options\">\n            <div className=\"row text-center justify-content-center\">\n              <button className=\"tag col-sm-5\" id=\"a\" onClick={this.updateAnswer.bind(this)} disabled='true'>\n                {this.state.optionA}\n              </button>\n              <div className=\"tag col-sm-5\" id=\"b\" onClick={this.updateAnswer.bind(this)}>\n              {this.state.optionB}\n              </div>\n            </div>\n            <br />\n            <div className=\"row text-center justify-content-center\">\n              <div className=\"tag col-sm-5\" id=\"c\" onClick={this.updateAnswer.bind(this)}>\n              {this.state.optionC}                \n              </div>\n              <div className=\"tag col-sm-5\" id=\"d\" onClick={this.updateAnswer.bind(this)}>\n              {this.state.optionD} \n              </div>\n            </div>\n          </div>\n          <br />\n          <div className=\"row\">\n            <div className=\"col-sm-5\" />\n            <div className=\"timer col-sm-4\">\n              <CircularProgressbar\n                className=\"timerCircle\"\n                percentage={this.state.percentage}\n                text={\n                  <tspan\n                    dx={needDominantBaselineFix ? -25 : 0}\n                    dy={needDominantBaselineFix ? +6 : 0}\n                  >\n                    {this.state.time}\n                  </tspan>\n                }\n                background=\"true\"\n                backgroundPadding={0}\n                strokeWidth={5}\n                styles={{\n                  // Customize the root svg element\n                  root: {},\n                  // Customize the path, i.e. the \"completed progress\"\n                  path: {\n                    // Path color\n                    stroke: `rgba(250, 0, 250, ${this.state.percentage / 100})`,\n                    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                    strokeLinecap: \"butt\",\n                    // Customize transition animation\n                    transition: \"stroke-dashoffset 0.5s ease 0s\"\n                  },\n                  // Customize the circle behind the path, i.e. the \"total progress\"\n                  trail: {\n                    // Trail color\n                    stroke: \"#d6d6d6\"\n                  },\n                  // Customize the text\n                  text: {\n                    // Text color\n                    fill: \"#34c\",\n                    // Text size\n                    fontSize: \"20px\"\n                  },\n                  // Customize background - only used when the `background` prop is true\n                  background: {\n                    fill: \"white\"\n                  }\n                }}\n              />\n            </div>\n\n            <div\n              className=\"continue tag col-sm-2 text-center\"\n              style={{ borderRadius: 25 }}\n            >\n              Continue\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuizConsole;\n"]},"metadata":{},"sourceType":"module"}