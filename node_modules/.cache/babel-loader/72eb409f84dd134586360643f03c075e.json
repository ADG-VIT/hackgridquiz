{"ast":null,"code":"import _classCallCheck from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/yash/WebDev/Quiz-Website/player-console/src/App.js\";\nimport React, { Component } from 'react';\nimport * as firebase from 'firebase';\nimport firebaseCreateUser from 'firebase';\nimport Loader from 'react-loader-spinner';\nimport QuizConsole from './components/QuizConsole';\nimport './App.css';\nimport { stringify } from 'querystring';\nvar config = {\n  apiKey: \"AIzaSyBPLVDzn-VHltDnx-dL1e_M_cPIQQqr8P4\",\n  authDomain: \"adgquiz.firebaseapp.com\",\n  databaseURL: \"https://adgquiz.firebaseio.com\",\n  projectId: \"adgquiz\",\n  storageBucket: \"adgquiz.appspot.com\",\n  messagingSenderId: \"838063692472\"\n};\nfirebase.initializeApp(config);\nvar firebaseUser = firebase.database().ref(\"players\");\nvar teamName = ducument.getElementById(\"TeamName\").value + '';\nvar password = document.getElementById(\"password\").value + '';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onPressRegisterButton = function (event) {\n      event.preventDefault();\n\n      if (_this.state.registered === false) {\n        firebaseUser.child(_this.state.teamName).set({\n          password: _this.state.password,\n          score: 0,\n          counter: 0\n        });\n\n        _this.setState({\n          registered: true\n        });\n      } else {\n        var firebasePassCheck = firebase.database().ref(\"players/\".concat(_this.state.teamName));\n        firebasePassCheck.once('value', function (snapshot) {\n          var pass = snapshot.val().password; // if(this.state.password===JSON.stringify(pass)){\n\n          console.log(JSON.stringify(pass));\n        });\n      }\n    };\n\n    _this.state = {\n      loadingSignUp: false,\n      registered: false,\n      loggedIn: false,\n      teamName: teamName,\n      password: password,\n      participantName: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(document.getElementById(\"password\").value);\n    }\n  }, {\n    key: \"renderRegisterOrQuiz\",\n    value: function renderRegisterOrQuiz() {\n      if (this.state.loggedIn) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" \", React.createElement(QuizConsole, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n      return React.createElement(\"form\", {\n        className: \"register\",\n        onSubmit: this.onPressRegisterButton.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.register());\n    }\n  }, {\n    key: \"teamNameOnChange\",\n    value: function teamNameOnChange(event) {\n      var _this2 = this;\n\n      this.setState({\n        teamName: event.target.value,\n        loadingSignUp: true\n      });\n      firebaseUser.once('value', function (snapshot) {\n        var players = Object.keys(snapshot.val());\n        var userCheck = players.includes(_this2.state.teamName);\n\n        _this2.setState({\n          loadingSignUp: false\n        });\n\n        if (userCheck) _this2.setState({\n          registered: true\n        });else _this2.setState({\n          registered: false\n        });\n      });\n    }\n  }, {\n    key: \"participantNameOnChange\",\n    value: function participantNameOnChange(event) {\n      this.setState({\n        participantName: event.target.value\n      });\n    }\n  }, {\n    key: \"passwordOnChange\",\n    value: function passwordOnChange(event) {\n      this.setState({\n        password: event.target.value\n      });\n      console.log(this.state.password);\n    }\n  }, {\n    key: \"loginOrRegister\",\n    value: function loginOrRegister() {\n      if (this.state.registered === false) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"ParticipantName\",\n        className: \"\",\n        name: \"login\",\n        placeholder: \"Participant Name\",\n        value: this.state.participantName,\n        autoComplete: \"off\",\n        onChange: this.participantNameOnChange.bind(this),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        className: \"\",\n        name: \"login\",\n        placeholder: \"password\",\n        value: this.state.password,\n        onChange: this.passwordOnChange.bind(this),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"btn btn-primary\",\n        id: \"rButton\",\n        type: \"submit\",\n        value: \"Register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        className: \"\",\n        name: \"login\",\n        placeholder: \"password\",\n        value: this.state.password,\n        onChange: this.passwordOnChange.bind(this),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Registered\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"btn btn-primary\",\n        id: \"rButton\",\n        type: \"submit\",\n        value: \"Log In\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"spinner\",\n    value: function spinner() {\n      if (this.state.loadingSignUp) return React.createElement(Loader, {\n        type: \"TailSpin\",\n        color: \"#00BFFF\",\n        height: \"35\",\n        width: \"35\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"register\",\n    value: function register() {\n      return React.createElement(\"div\", {\n        className: \"registerCard container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"TeamName\",\n        className: \"\",\n        name: \"login\",\n        placeholder: \"Team Name\",\n        value: this.state.teamName,\n        autoComplete: \"off\",\n        onChange: this.teamNameOnChange.bind(this),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), this.spinner(), this.loginOrRegister());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.renderRegisterOrQuiz());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/yash/WebDev/Quiz-Website/player-console/src/App.js"],"names":["React","Component","firebase","firebaseCreateUser","Loader","QuizConsole","stringify","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initializeApp","firebaseUser","database","ref","teamName","ducument","getElementById","value","password","document","App","props","onPressRegisterButton","event","preventDefault","state","registered","child","set","score","counter","setState","firebasePassCheck","once","snapshot","pass","val","console","log","JSON","loadingSignUp","loggedIn","participantName","bind","register","target","players","Object","keys","userCheck","includes","participantNameOnChange","passwordOnChange","color","teamNameOnChange","spinner","loginOrRegister","renderRegisterOrQuiz"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as firebase from 'firebase';\nimport firebaseCreateUser from 'firebase'\nimport Loader from 'react-loader-spinner'\nimport QuizConsole from './components/QuizConsole';\nimport './App.css';\nimport { stringify } from 'querystring';\n\n\nvar config = {\n  apiKey: \"AIzaSyBPLVDzn-VHltDnx-dL1e_M_cPIQQqr8P4\",\n  authDomain: \"adgquiz.firebaseapp.com\",\n  databaseURL: \"https://adgquiz.firebaseio.com\",\n  projectId: \"adgquiz\",\n  storageBucket: \"adgquiz.appspot.com\",\n  messagingSenderId: \"838063692472\"\n};\nfirebase.initializeApp(config);\n\nconst firebaseUser = firebase.database().ref(`players`);\n\nconst teamName =ducument.getElementById(\"TeamName\").value + '';\nconst password =document.getElementById(\"password\").value + '';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      loadingSignUp: false,\n      registered: false,\n      loggedIn: false,\n      teamName: teamName,\n      password: password,\n      participantName: ''\n     }\n  }\n\n  componentDidMount(){\n    console.log(document.getElementById(\"password\").value)\n  }\n\n  renderRegisterOrQuiz(){\n    if(this.state.loggedIn)\n    return(\n      <div> <QuizConsole /></div>\n     \n    )\n\n    return(\n      <form className =\"register\" onSubmit={this.onPressRegisterButton.bind(this)}>\n          {this.register()}\n      </form>\n    )\n  }\n\n  teamNameOnChange(event){\n    this.setState({ teamName: event.target.value,\n                    loadingSignUp: true});\n    firebaseUser.once('value', (snapshot)=> {\n      let players = Object.keys(snapshot.val());\n        let userCheck = players.includes(this.state.teamName);\n        this.setState({loadingSignUp: false})\n       if (userCheck)\n       this.setState({registered: true})\n       else\n       this.setState({registered: false})\n    })\n    \n  }\n\n  participantNameOnChange(event){\n    this.setState({participantName: event.target.value});\n  }\n\n  passwordOnChange(event){\n    this.setState({ password: event.target.value});\n    console.log(this.state.password)\n  }\n\n  onPressRegisterButton=(event)=>{\n    event.preventDefault();\n    if(this.state.registered===false)\n    {\n      firebaseUser.child(this.state.teamName).set({\n        password: this.state.password,\n        score: 0,\n        counter: 0,\n      });\n      this.setState({registered: true})\n    }\n    else{\n      let firebasePassCheck = firebase.database().ref(`players/${this.state.teamName}`);\n    firebasePassCheck.once('value', function(snapshot) {\n      let pass= snapshot.val().password;\n      \n      // if(this.state.password===JSON.stringify(pass)){\n        console.log(JSON.stringify(pass));\n      \n    });\n    }\n  }\n\n  loginOrRegister(){\n    if(this.state.registered===false)\n    return(\n      <div>\n      <input type=\"text\" id=\"ParticipantName\" className=\"\" name=\"login\" placeholder=\"Participant Name\" value={this.state.participantName} autoComplete=\"off\" onChange={this.participantNameOnChange.bind(this)} required/>\n      <input type=\"password\" id=\"password\" className=\"\" name=\"login\" placeholder=\"password\" value={this.state.password} onChange={this.passwordOnChange.bind(this)} required/>      \n      <br/>\n      <input className=\"btn btn-primary\" id=\"rButton\" type=\"submit\" value=\"Register\"/>\n      </div>\n    )\n\n    return(\n      <div>\n      <input type=\"password\" id=\"password\" className=\"\" name=\"login\" placeholder=\"password\" value={this.state.password} onChange={this.passwordOnChange.bind(this)} required/>\n      <p style={{color: 'blue'}}>Registered</p>      \n      <br/>\n      <input className=\"btn btn-primary\" id=\"rButton\" type=\"submit\" value=\"Log In\"/>\n      </div>\n    )\n  }\n\n  spinner(){\n    if(this.state.loadingSignUp)\n    return(\n      <Loader\n         type=\"TailSpin\"\n         color=\"#00BFFF\"\n         height=\"35\"\t\n         width=\"35\"\n      /> \n    )\n  }\n\n  register(){\n    return(\n      <div className=\"registerCard container\">\n      <input type=\"text\" id=\"TeamName\" className=\"\" name=\"login\" placeholder=\"Team Name\" value={this.state.teamName} autoComplete=\"off\" onChange={this.teamNameOnChange.bind(this)} required/>\n      {this.spinner()}\n      {this.loginOrRegister()}\n      </div>\n    )\n  }\n\n  render() { \n    return ( \n      <div className=\"App\">\n      {this.renderRegisterOrQuiz()}\n      </div>\n     );\n  }\n}\n \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}