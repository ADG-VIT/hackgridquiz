{"ast":null,"code":"import _classCallCheck from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yash/WebDev/Quiz-Website/player-console/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/yash/WebDev/Quiz-Website/player-console/src/App.js\";\nimport React, { Component } from 'react';\nimport * as firebase from 'firebase';\nimport QuizConsole from './components/QuizConsole';\nimport './App.css';\nvar config = {\n  apiKey: \"AIzaSyBPLVDzn-VHltDnx-dL1e_M_cPIQQqr8P4\",\n  authDomain: \"adgquiz.firebaseapp.com\",\n  databaseURL: \"https://adgquiz.firebaseio.com\",\n  projectId: \"adgquiz\",\n  storageBucket: \"adgquiz.appspot.com\",\n  messagingSenderId: \"838063692472\"\n};\nfirebase.initializeApp(config);\nvar firebaseUser = firebase.database().ref(\"players\");\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      registered: false,\n      loggedIn: false,\n      teamName: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"renderRegisterOrQuiz\",\n    value: function renderRegisterOrQuiz() {\n      if (this.state.loggedIn) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \" \", React.createElement(QuizConsole, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        className: \"register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.register());\n    }\n  }, {\n    key: \"teamNameOnChange\",\n    value: function teamNameOnChange(event) {\n      var _this2 = this;\n\n      this.setState({\n        teamName: event.target.value\n      });\n      firebaseUser.once('value', function (snapshot) {\n        var players = Object.keys(snapshot.val());\n        var userCheck = players.includes(_this2.state.teamName);\n        if (userCheck) _this2.setState({\n          registered: true\n        });else _this2.setState({\n          registered: false\n        });\n      });\n    }\n  }, {\n    key: \"passwordOnChange\",\n    value: function passwordOnChange(event) {\n      this.setState({\n        password: event.target.value\n      });\n      console.log(this.state.password);\n    }\n  }, {\n    key: \"loginOrRegister\",\n    value: function loginOrRegister() {\n      if (this.state.registered) return React.createElement(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        className: \"\",\n        name: \"login\",\n        placeholder: \"password\",\n        value: this.state.password,\n        onChange: this.passwordOnChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"TeamName\",\n        className: \"\",\n        name: \"login\",\n        placeholder: \"Team Name\",\n        value: this.state.teamName,\n        autoComplete: \"off\",\n        onChange: this.teamNameOnChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        className: \"\",\n        name: \"login\",\n        placeholder: \"password\",\n        value: this.state.password,\n        onChange: this.passwordOnChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"register\",\n    value: function register() {\n      return React.createElement(\"div\", {\n        className: \"registerCard container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"TeamName\",\n        className: \"\",\n        name: \"login\",\n        placeholder: \"Team Name\",\n        value: this.state.teamName,\n        autoComplete: \"off\",\n        onChange: this.teamNameOnChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), this.loginOrRegister(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.renderRegisterOrQuiz());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/yash/WebDev/Quiz-Website/player-console/src/App.js"],"names":["React","Component","firebase","QuizConsole","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initializeApp","firebaseUser","database","ref","App","props","state","registered","loggedIn","teamName","password","register","event","setState","target","value","once","snapshot","players","Object","keys","val","userCheck","includes","console","log","passwordOnChange","bind","teamNameOnChange","loginOrRegister","renderRegisterOrQuiz"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as firebase from 'firebase';\nimport QuizConsole from './components/QuizConsole';\nimport './App.css';\n\n\nvar config = {\n  apiKey: \"AIzaSyBPLVDzn-VHltDnx-dL1e_M_cPIQQqr8P4\",\n  authDomain: \"adgquiz.firebaseapp.com\",\n  databaseURL: \"https://adgquiz.firebaseio.com\",\n  projectId: \"adgquiz\",\n  storageBucket: \"adgquiz.appspot.com\",\n  messagingSenderId: \"838063692472\"\n};\nfirebase.initializeApp(config);\n\nconst firebaseUser = firebase.database().ref(`players`);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      registered: false,\n      loggedIn: false,\n      teamName: '',\n      password: ''\n     }\n  }\n\n  renderRegisterOrQuiz(){\n    if(this.state.loggedIn)\n    return(\n      <div> <QuizConsole /></div>\n     \n    )\n\n    return(\n      <div className =\"register\">\n          {this.register()}\n      </div>\n    )\n  }\n\n  teamNameOnChange(event){\n    this.setState({ teamName: event.target.value});\n    firebaseUser.once('value', (snapshot)=> {\n      let players = Object.keys(snapshot.val());\n        let userCheck = players.includes(this.state.teamName);\n       if (userCheck)\n       this.setState({registered: true})\n       else\n       this.setState({registered: false})\n    })\n  }\n\n  passwordOnChange(event){\n    this.setState({ password: event.target.value});\n    console.log(this.state.password)\n  }\n\n  loginOrRegister(){\n    if(this.state.registered)\n    return(\n      <input type=\"password\" id=\"password\" className=\"\" name=\"login\" placeholder=\"password\" value={this.state.password} onChange={this.passwordOnChange.bind(this)}/>\n    )\n\n    return(\n      <div>\n      <input type=\"text\" id=\"TeamName\" className=\"\" name=\"login\" placeholder=\"Team Name\" value={this.state.teamName} autoComplete=\"off\" onChange={this.teamNameOnChange.bind(this)}/>\n      <input type=\"password\" id=\"password\" className=\"\" name=\"login\" placeholder=\"password\" value={this.state.password} onChange={this.passwordOnChange.bind(this)}/>\n      </div>\n    )\n  }\n\n  register(){\n    return(\n      <div className=\"registerCard container\">\n        \n      <input type=\"text\" id=\"TeamName\" className=\"\" name=\"login\" placeholder=\"Team Name\" value={this.state.teamName} autoComplete=\"off\" onChange={this.teamNameOnChange.bind(this)}/>\n      {this.loginOrRegister()}\n      {/* <input type=\"password\" id=\"password\" className=\"\" name=\"login\" placeholder=\"password\" /> */}\n      <br/>\n      {/* <input type=\"submit\" className=\"fadeIn fourth\" value=\"Log In\" /> */}\n        \n      </div>\n    )\n  }\n\n  render() { \n    return ( \n      <div className=\"App\">\n      {this.renderRegisterOrQuiz()}\n      </div>\n     );\n  }\n}\n \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}